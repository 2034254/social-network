{"version":3,"file":"static/js/92.3480e7f0.chunk.js","mappings":"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","sources":["components/Post/Feed.js","components/NewUsersLIst.js","HomePage/HomePage.js","../node_modules/semantic-ui-react/dist/es/elements/Header/HeaderSubheader.js","../node_modules/semantic-ui-react/dist/es/elements/Header/HeaderContent.js","../node_modules/semantic-ui-react/dist/es/elements/Header/Header.js","../node_modules/semantic-ui-react/dist/es/elements/Loader/Loader.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Post from \"./Post\";\r\nimport { postActions } from \"../../actions/postActions\";\r\nimport { Dimmer, Loader, Divider, Header, Icon } from \"semantic-ui-react\";\r\n\r\nclass Feed extends Component {\r\n  componentDidMount() {\r\n    const { dispatch, posts } = this.props;\r\n    if (!posts.length) {\r\n      dispatch(postActions.fetchPosts({ initialFetch: true }));\r\n    }\r\n  }\r\n\r\n  fetchData = () => {\r\n    const { dispatch, posts } = this.props;\r\n    dispatch(\r\n      postActions.fetchPosts({\r\n        initialFetch: false,\r\n        lastId: posts[posts.length - 1]._id,\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { loadingUser, posts, totalPosts } = this.props;\r\n    const hasMore = posts.length === totalPosts ? false : true;\r\n    const feedPosts = posts.map((post) => (\r\n      <Post key={post._id} post={{ ...post, feed: true }} />\r\n    ));\r\n\r\n    return loadingUser ? (\r\n      <Dimmer active>\r\n        <Loader />\r\n      </Dimmer>\r\n    ) : (\r\n      <InfiniteScroll\r\n        dataLength={posts.length} //This is important field to render the next data\r\n        next={this.fetchData}\r\n        hasMore={hasMore}\r\n        loader={<h4>Loading...</h4>}\r\n        endMessage={\r\n          <Divider horizontal>\r\n            <Header as=\"h4\">\r\n              <Icon name=\"eye\" />\r\n              Yay! You have seen it all\r\n            </Header>\r\n          </Divider>\r\n        }\r\n      >\r\n        {feedPosts}\r\n      </InfiniteScroll>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.post.posts,\r\n  totalPosts: state.post.totalPosts,\r\n  loadingUser: state.user.loadingUser,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Feed);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Image, Dimmer, Loader, Button } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { userActions } from \"../actions/userActions\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\ndayjs.extend(relativeTime);\r\n\r\nclass NewUsersList extends Component {\r\n  componentDidMount = () => {\r\n    const { dispatch, newUsers } = this.props;\r\n    if (!newUsers.users.length) {\r\n      dispatch(userActions.getNewUsers({ initialFetch: true }));\r\n    }\r\n  };\r\n\r\n  fetchMoreUsers = () => {\r\n    const {\r\n      dispatch,\r\n      newUsers: { users, fetchingNewUsers },\r\n    } = this.props;\r\n\r\n    if (!fetchingNewUsers) {\r\n      const lastId = users[users.length - 1]._id;\r\n      dispatch(userActions.getNewUsers({ initialFetch: false, lastId }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { newUsers, username } = this.props;\r\n\r\n    const users = newUsers.users.map((user) => {\r\n      return (\r\n        <List.Item key={user._id}>\r\n          <Image\r\n            avatar\r\n            src={`/images/profile-picture/100x100/${user.profilePicture}`}\r\n          />\r\n          <List.Content>\r\n            <List.Header\r\n              as={Link}\r\n              to={user.username === username ? \"/profile\" : \"/\" + user.username}\r\n            >\r\n              {user.username}\r\n            </List.Header>\r\n\r\n            <span style={{ color: \"#757575\" }}>\r\n              joined {dayjs(user.date).fromNow()}\r\n            </span>\r\n          </List.Content>\r\n        </List.Item>\r\n      );\r\n    });\r\n    return (\r\n      <Fragment>\r\n        <List size=\"big\">\r\n          {newUsers.fetching ? (\r\n            <Dimmer active>\r\n              <Loader />\r\n            </Dimmer>\r\n          ) : null}\r\n          {\r\n            <List.Item>\r\n              <List.Content>\r\n                <List.Header> all users: {newUsers.usersCount}</List.Header>\r\n              </List.Content>\r\n            </List.Item>\r\n          }\r\n          {users}\r\n          {newUsers.usersCount - newUsers.users.length !== 0 ? (\r\n            <Button\r\n              fluid\r\n              loading={newUsers.fetchingNewUsers}\r\n              onClick={() => this.fetchMoreUsers()}\r\n            >\r\n              More users\r\n            </Button>\r\n          ) : null}\r\n        </List>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  newUsers: state.newUsers,\r\n  username: state.user.data.username,\r\n});\r\n\r\nconst connectedNewUsersList = connect(mapStateToProps)(NewUsersList);\r\nexport { connectedNewUsersList as NewUsersList };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Feed from \"../components/Post/Feed\";\r\nimport { NewUsersList } from \"../components/NewUsersLIst\";\r\n\r\nclass HomePage extends Component {\r\n  componentDidMount = () => {\r\n    document.title = \"social-network\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\" id=\"homepage-container\">\r\n        <div id=\"left-container\" className=\"section\">\r\n          <NewUsersList></NewUsersList>\r\n        </div>\r\n\r\n        <div id=\"right\">\r\n          <Feed />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  fetching: state.post\r\n});\r\n\r\nconst connectedHomePage = connect(mapStateToProps)(HomePage);\r\nexport { connectedHomePage as default };\r\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Headers may contain subheaders.\n */\n\nfunction HeaderSubheader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('sub header', className);\n  var rest = getUnhandledProps(HeaderSubheader, props);\n  var ElementType = getElementType(HeaderSubheader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderSubheader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderSubheader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nHeaderSubheader.create = createShorthandFactory(HeaderSubheader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default HeaderSubheader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Header content wraps the main content when there is an adjacent Icon or Image.\n */\n\nfunction HeaderContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(HeaderContent, props);\n  var ElementType = getElementType(HeaderContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nHeaderContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nHeaderContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default HeaderContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useValueAndKey, useTextAlignProp, useKeyOrValueAndKey, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport Image from '../../elements/Image';\nimport HeaderSubheader from './HeaderSubheader';\nimport HeaderContent from './HeaderContent';\n/**\n * A header provides a short summary of content\n */\n\nfunction Header(props) {\n  var attached = props.attached,\n      block = props.block,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      disabled = props.disabled,\n      dividing = props.dividing,\n      floated = props.floated,\n      icon = props.icon,\n      image = props.image,\n      inverted = props.inverted,\n      size = props.size,\n      sub = props.sub,\n      subheader = props.subheader,\n      textAlign = props.textAlign;\n  var classes = cx('ui', color, size, useKeyOnly(block, 'block'), useKeyOnly(disabled, 'disabled'), useKeyOnly(dividing, 'dividing'), useValueAndKey(floated, 'floated'), useKeyOnly(icon === true, 'icon'), useKeyOnly(image === true, 'image'), useKeyOnly(inverted, 'inverted'), useKeyOnly(sub, 'sub'), useKeyOrValueAndKey(attached, 'attached'), useTextAlignProp(textAlign), 'header', className);\n  var rest = getUnhandledProps(Header, props);\n  var ElementType = getElementType(Header, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  var iconElement = Icon.create(icon, {\n    autoGenerateKey: false\n  });\n  var imageElement = Image.create(image, {\n    autoGenerateKey: false\n  });\n  var subheaderElement = HeaderSubheader.create(subheader, {\n    autoGenerateKey: false\n  });\n\n  if (iconElement || imageElement) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), iconElement || imageElement, (content || subheaderElement) && React.createElement(HeaderContent, null, content, subheaderElement));\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content, subheaderElement);\n}\n\nHeader.handledProps = [\"as\", \"attached\", \"block\", \"children\", \"className\", \"color\", \"content\", \"disabled\", \"dividing\", \"floated\", \"icon\", \"image\", \"inverted\", \"size\", \"sub\", \"subheader\", \"textAlign\"];\nHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Attach header  to other content, like a segment. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'bottom'])]),\n\n  /** Format header to appear inside a content block. */\n  block: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Color of the header. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Show that the header is inactive. */\n  disabled: PropTypes.bool,\n\n  /** Divide header from the content below it. */\n  dividing: PropTypes.bool,\n\n  /** Header can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Add an icon by icon name or pass an Icon. */\n  icon: customPropTypes.every([customPropTypes.disallow(['image']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Add an image by img src or pass an Image. */\n  image: customPropTypes.every([customPropTypes.disallow(['icon']), PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand])]),\n\n  /** Inverts the color of the header for dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Content headings are sized with em and are based on the font-size of their container. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'mini')),\n\n  /** Headers may be formatted to label smaller or de-emphasized content. */\n  sub: PropTypes.bool,\n\n  /** Shorthand for Header.Subheader. */\n  subheader: customPropTypes.itemShorthand,\n\n  /** Align header content. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nHeader.Content = HeaderContent;\nHeader.Subheader = HeaderSubheader;\nexport default Header;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\n/**\n * A loader alerts a user to wait for an activity to complete.\n * @see Dimmer\n */\n\nfunction Loader(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      indeterminate = props.indeterminate,\n      inline = props.inline,\n      inverted = props.inverted,\n      size = props.size;\n  var classes = cx('ui', size, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), useKeyOnly(inverted, 'inverted'), useKeyOnly(children || content, 'text'), useKeyOrValueAndKey(inline, 'inline'), 'loader', className);\n  var rest = getUnhandledProps(Loader, props);\n  var ElementType = getElementType(Loader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nLoader.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"disabled\", \"indeterminate\", \"inline\", \"inverted\", \"size\"];\nLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A loader can be active or visible. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A loader can be disabled or hidden. */\n  disabled: PropTypes.bool,\n\n  /** A loader can show it's unsure of how long a task will take. */\n  indeterminate: PropTypes.bool,\n\n  /** Loaders can appear inline with content. */\n  inline: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['centered'])]),\n\n  /** Loaders can have their colors inverted. */\n  inverted: PropTypes.bool,\n\n  /** Loaders can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES)\n} : {};\nexport default Loader;"],"names":["Feed","Component","constructor","arguments","fetchData","dispatch","posts","this","props","postActions","fetchPosts","initialFetch","lastId","length","_id","componentDidMount","render","loadingUser","totalPosts","hasMore","feedPosts","map","post","_jsx","Post","feed","Dimmer","active","children","Loader","InfiniteScroll","dataLength","next","loader","endMessage","Divider","horizontal","_jsxs","Header","as","Icon","name","connect","state","user","dayjs","relativeTime","NewUsersList","newUsers","users","userActions","getNewUsers","fetchMoreUsers","fetchingNewUsers","username","List","Item","Image","avatar","src","concat","profilePicture","Content","Link","to","style","color","date","fromNow","Fragment","size","fetching","usersCount","Button","fluid","loading","onClick","connectedNewUsersList","data","HomePage","document","title","className","id","connectedHomePage","HeaderSubheader","content","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","_extends","childrenUtils","handledProps","propTypes","create","createShorthandFactory","HeaderContent","attached","block","disabled","dividing","floated","icon","image","inverted","sub","subheader","textAlign","useKeyOnly","useValueAndKey","useKeyOrValueAndKey","useTextAlignProp","iconElement","autoGenerateKey","imageElement","subheaderElement","Subheader","indeterminate","inline"],"sourceRoot":""}