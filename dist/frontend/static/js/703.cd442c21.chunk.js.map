{"version":3,"file":"static/js/703.cd442c21.chunk.js","mappings":"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","sources":["UserProfile/UserProfile.js","components/Messages.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageContent.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageItem.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageList.js","../node_modules/semantic-ui-react/dist/es/collections/Message/Message.js","../node_modules/semantic-ui-react/dist/es/elements/Loader/Loader.js"],"sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Dimmer,\r\n  Modal,\r\n  List,\r\n  Loader,\r\n  Icon,\r\n  Divider,\r\n  Message\r\n} from \"semantic-ui-react\";\r\nimport { userActions } from \"../actions/userActions\";\r\n\r\nimport Post from \"../components/Post/Post\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { FollowButton } from \"../components/FollowButton\";\r\nimport Messages from \"../components/Messages\";\r\nimport Linkify from \"linkifyjs/react\";\r\nimport * as linkify from \"linkifyjs\";\r\nimport hashtag from \"linkifyjs/plugins/hashtag\";\r\nimport mention from \"linkifyjs/plugins/mention\";\r\nimport FollowingFollowerList from \"../components/FollowingFollowerList\";\r\n\r\nhashtag(linkify);\r\nmention(linkify);\r\n\r\nconst linkifyOptions = {\r\n  formatHref: function(href, type) {\r\n    if (type === \"hashtag\") {\r\n      href = \"/hashtags/\" + href.substring(1);\r\n    }\r\n    if (type === \"mention\") {\r\n      href = \"/\" + href.substring(1);\r\n    }\r\n    return href;\r\n  },\r\n  attributes: {\r\n    target: {\r\n      url: \"_blank\"\r\n    }\r\n  }\r\n};\r\n\r\nclass UserProfile extends Component {\r\n  state = { username: \"\" };\r\n\r\n  getFollowings = () => {\r\n    const { dispatch, userProfileData } = this.props;\r\n    dispatch(userActions.getUserProfileFollowings(userProfileData.data._id));\r\n  };\r\n\r\n  getFollowers = () => {\r\n    const { dispatch, userProfileData } = this.props;\r\n    dispatch(userActions.getUserProfileFollowers(userProfileData.data._id));\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const { dispatch, userProfileData, match } = this.props;\r\n    if (userProfileData.data.username !== match.params.username) {\r\n      dispatch(userActions.getUserProfileData(match.params.username));\r\n    }\r\n  };\r\n\r\n  fetchData = () => {\r\n    const { dispatch, userProfileData } = this.props;\r\n    const lastId =\r\n      userProfileData.data.posts[userProfileData.data.posts.length - 1]._id;\r\n\r\n    dispatch(\r\n      userActions.getUserPosts({ userId: userProfileData.data._id, lastId })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { userProfileData, fetchingUserData, alert } = this.props;\r\n    const hasMore =\r\n      userProfileData.data.postsCount === userProfileData.data.posts.length\r\n        ? false\r\n        : true;\r\n    if (alert.type) {\r\n      return (\r\n        <div className=\"container\">\r\n          <Messages alert={alert} />\r\n        </div>\r\n      );\r\n    }\r\n    if (userProfileData.loadingUser || fetchingUserData) {\r\n      return (\r\n        <Dimmer active>\r\n          <Loader />\r\n        </Dimmer>\r\n      );\r\n    } else {\r\n      const posts = userProfileData.data.posts.map(post => {\r\n        return (\r\n          <Modal\r\n            key={post._id}\r\n            size=\"small\"\r\n            trigger={\r\n              <div className=\"gallery-item\">\r\n                <img\r\n                  src={`/images/post-images/thumbnail/${post.photo}`}\r\n                  className=\"gallery-image\"\r\n                  alt=\"\"\r\n                />\r\n\r\n                <div className=\"gallery-item-info\">\r\n                  <ul>\r\n                    <li className=\"gallery-item-likes\">\r\n                      <span className=\"visually-hidden\">Likes:</span>\r\n                      <Icon name=\"heart\" /> {post.likes}\r\n                    </li>\r\n                    <li className=\"gallery-item-comments\">\r\n                      <span className=\"visually-hidden\">Comments:</span>\r\n                      <Icon name=\"comment\" /> {post.comments}\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            }\r\n          >\r\n            <Post\r\n              post={{\r\n                ...post,\r\n                author: [\r\n                  {\r\n                    profilePicture: userProfileData.data.profilePicture,\r\n                    username: userProfileData.data.username,\r\n                    _id: userProfileData.data._id\r\n                  }\r\n                ]\r\n              }}\r\n            />\r\n          </Modal>\r\n        );\r\n      });\r\n\r\n      const followingList = userProfileData.data.follwingUsers.length\r\n        ? userProfileData.data.follwingUsers.map(({ user }) => (\r\n            <FollowingFollowerList\r\n              key={user._id}\r\n              user={user}\r\n            ></FollowingFollowerList>\r\n          ))\r\n        : \"No followings\";\r\n\r\n      const followerList = userProfileData.data.followerUsers.length\r\n        ? userProfileData.data.followerUsers.map(({ user }) => (\r\n            <FollowingFollowerList\r\n              key={user._id}\r\n              user={user}\r\n            ></FollowingFollowerList>\r\n          ))\r\n        : \"No followers\";\r\n\r\n      return (\r\n        <Fragment>\r\n          <header>\r\n            <div className=\"container\">\r\n              <div className=\"profile\">\r\n                <div className=\"profile-image\">\r\n                  <img\r\n                    src={`/images/profile-picture/100x100/${userProfileData.data.profilePicture}`}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"profile-user-settings\">\r\n                  <h1 className=\"profile-user-name\">\r\n                    {userProfileData.data.username}\r\n                  </h1>\r\n\r\n                  <FollowButton\r\n                    userId={userProfileData.data._id}\r\n                  ></FollowButton>\r\n                </div>\r\n\r\n                <div className=\"profile-stats\">\r\n                  <ul>\r\n                    <li>\r\n                      <span className=\"profile-stat-count\">\r\n                        {userProfileData.data.postsCount}\r\n                      </span>{\" \"}\r\n                      posts\r\n                    </li>\r\n                    <Modal\r\n                      trigger={\r\n                        <li onClick={this.getFollowers}>\r\n                          <span className=\"profile-stat-count\">\r\n                            {userProfileData.data.followers}\r\n                          </span>{\" \"}\r\n                          followers\r\n                        </li>\r\n                      }\r\n                    >\r\n                      <Modal.Header>Followers</Modal.Header>\r\n                      <Modal.Content scrolling>\r\n                        <Modal.Description>\r\n                          <List selection verticalAlign=\"middle\" size=\"huge\">\r\n                            {followerList}\r\n                          </List>\r\n                        </Modal.Description>\r\n                      </Modal.Content>\r\n                    </Modal>\r\n                    <Modal\r\n                      trigger={\r\n                        <li onClick={this.getFollowings}>\r\n                          <span className=\"profile-stat-count\">\r\n                            {userProfileData.data.followings}\r\n                          </span>{\" \"}\r\n                          following\r\n                        </li>\r\n                      }\r\n                    >\r\n                      <Modal.Header>Following</Modal.Header>\r\n                      <Modal.Content scrolling>\r\n                        <Modal.Description>\r\n                          <List selection verticalAlign=\"middle\" size=\"huge\">\r\n                            {followingList}\r\n                          </List>\r\n                        </Modal.Description>\r\n                      </Modal.Content>\r\n                    </Modal>\r\n                  </ul>\r\n                </div>\r\n\r\n                <div className=\"profile-bio\">\r\n                  <div className=\"profile-real-name\">\r\n                    {userProfileData.data.firstName +\r\n                      \" \" +\r\n                      userProfileData.data.lastName}\r\n                  </div>\r\n                  <div className=\"profile-bio-description\">\r\n                    <Linkify options={linkifyOptions}>\r\n                      {userProfileData.data.bio}\r\n                    </Linkify>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </header>\r\n          <main>\r\n            <div className=\"container\">\r\n              {userProfileData.data.postsCount === 0 ? (\r\n                <Message info size=\"large\">\r\n                  This user has no posts yet.\r\n                </Message>\r\n              ) : (\r\n                <InfiniteScroll\r\n                  className=\"gallery\"\r\n                  dataLength={userProfileData.data.posts.length} //This is important field to render the next data\r\n                  next={this.fetchData}\r\n                  hasMore={hasMore}\r\n                  loader={<h4>Loading...</h4>}\r\n                >\r\n                  {posts}\r\n                </InfiniteScroll>\r\n              )}\r\n            </div>\r\n          </main>\r\n          <Divider hidden></Divider>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userProfileData: state.userProfile,\r\n  fetchingUserData: state.user.loadingUser,\r\n  user: state.user.data,\r\n  alert: state.alert\r\n});\r\n\r\nconst connectedProfilePage = connect(mapStateToProps)(UserProfile);\r\nexport { connectedProfilePage as default };\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\nexport default function Messages({ alert: { type, message } }) {\r\n  if (type === \"success\") {\r\n    return <Message success header=\"Success\" content={message} />;\r\n  } else if (type === \"error\") {\r\n    return <Message error header=\"Error\" content={message} />;\r\n  }\r\n  return null;\r\n}\r\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a content.\n */\n\nfunction MessageContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageContent, props);\n  var ElementType = getElementType(MessageContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default MessageContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a header.\n */\n\nfunction MessageHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(MessageHeader, props);\n  var ElementType = getElementType(MessageHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageHeader.create = createShorthandFactory(MessageHeader, function (val) {\n  return {\n    content: val\n  };\n});\nexport default MessageHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message list can contain an item.\n */\n\nfunction MessageItem(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageItem, props);\n  var ElementType = getElementType(MessageItem, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageItem.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageItem.defaultProps = {\n  as: 'li'\n};\nMessageItem.create = createShorthandFactory(MessageItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default MessageItem;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport MessageItem from './MessageItem';\n/**\n * A message can contain a list of items.\n */\n\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children);\n}\n\nMessageList.handledProps = [\"as\", \"children\", \"className\", \"items\"];\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\nMessageList.defaultProps = {\n  as: 'ul'\n};\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return {\n    items: val\n  };\n});\nexport default MessageList;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isNil from \"lodash/isNil\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLParagraph, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MessageContent from './MessageContent';\nimport MessageHeader from './MessageHeader';\nimport MessageList from './MessageList';\nimport MessageItem from './MessageItem';\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Message)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDismiss\", function (e) {\n      var onDismiss = _this.props.onDismiss;\n      if (onDismiss) onDismiss(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          attached = _this$props.attached,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          compact = _this$props.compact,\n          content = _this$props.content,\n          error = _this$props.error,\n          floating = _this$props.floating,\n          header = _this$props.header,\n          hidden = _this$props.hidden,\n          icon = _this$props.icon,\n          info = _this$props.info,\n          list = _this$props.list,\n          negative = _this$props.negative,\n          onDismiss = _this$props.onDismiss,\n          positive = _this$props.positive,\n          size = _this$props.size,\n          success = _this$props.success,\n          visible = _this$props.visible,\n          warning = _this$props.warning;\n      var classes = cx('ui', color, size, useKeyOnly(compact, 'compact'), useKeyOnly(error, 'error'), useKeyOnly(floating, 'floating'), useKeyOnly(hidden, 'hidden'), useKeyOnly(icon, 'icon'), useKeyOnly(info, 'info'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(success, 'success'), useKeyOnly(visible, 'visible'), useKeyOnly(warning, 'warning'), useKeyOrValueAndKey(attached, 'attached'), 'message', className);\n      var dismissIcon = onDismiss && React.createElement(Icon, {\n        name: \"close\",\n        onClick: this.handleDismiss\n      });\n      var rest = getUnhandledProps(Message, this.props);\n      var ElementType = getElementType(Message, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), dismissIcon, children);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), dismissIcon, Icon.create(icon, {\n        autoGenerateKey: false\n      }), (!_isNil(header) || !_isNil(content) || !_isNil(list)) && React.createElement(MessageContent, null, MessageHeader.create(header, {\n        autoGenerateKey: false\n      }), MessageList.create(list, {\n        autoGenerateKey: false\n      }), createHTMLParagraph(content, {\n        autoGenerateKey: false\n      })));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\n_defineProperty(Message, \"Content\", MessageContent);\n\n_defineProperty(Message, \"Header\", MessageHeader);\n\n_defineProperty(Message, \"List\", MessageList);\n\n_defineProperty(Message, \"Item\", MessageItem);\n\n_defineProperty(Message, \"handledProps\", [\"as\", \"attached\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"error\", \"floating\", \"header\", \"hidden\", \"icon\", \"info\", \"list\", \"negative\", \"onDismiss\", \"positive\", \"size\", \"success\", \"visible\", \"warning\"]);\n\nexport { Message as default };\nMessage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['bottom', 'top'])]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A message can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: PropTypes.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: PropTypes.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: PropTypes.bool,\n\n  /** A message can contain an icon. */\n  icon: PropTypes.oneOfType([customPropTypes.itemShorthand, PropTypes.bool]),\n\n  /** A message may be formatted to display information. */\n  info: PropTypes.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: PropTypes.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: PropTypes.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: PropTypes.bool,\n\n  /** A message can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: PropTypes.bool,\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: PropTypes.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: PropTypes.bool\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\n/**\n * A loader alerts a user to wait for an activity to complete.\n * @see Dimmer\n */\n\nfunction Loader(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      disabled = props.disabled,\n      indeterminate = props.indeterminate,\n      inline = props.inline,\n      inverted = props.inverted,\n      size = props.size;\n  var classes = cx('ui', size, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), useKeyOnly(inverted, 'inverted'), useKeyOnly(children || content, 'text'), useKeyOrValueAndKey(inline, 'inline'), 'loader', className);\n  var rest = getUnhandledProps(Loader, props);\n  var ElementType = getElementType(Loader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nLoader.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"disabled\", \"indeterminate\", \"inline\", \"inverted\", \"size\"];\nLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A loader can be active or visible. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A loader can be disabled or hidden. */\n  disabled: PropTypes.bool,\n\n  /** A loader can show it's unsure of how long a task will take. */\n  indeterminate: PropTypes.bool,\n\n  /** Loaders can appear inline with content. */\n  inline: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['centered'])]),\n\n  /** Loaders can have their colors inverted. */\n  inverted: PropTypes.bool,\n\n  /** Loaders can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES)\n} : {};\nexport default Loader;"],"names":["hashtag","linkify","mention","linkifyOptions","formatHref","href","type","substring","attributes","target","url","UserProfile","Component","constructor","arguments","state","username","getFollowings","dispatch","userProfileData","this","props","userActions","getUserProfileFollowings","data","_id","getFollowers","getUserProfileFollowers","componentDidMount","match","params","getUserProfileData","fetchData","lastId","posts","length","getUserPosts","userId","render","fetchingUserData","alert","hasMore","postsCount","_jsx","className","children","Messages","loadingUser","Dimmer","active","Loader","map","post","Modal","size","trigger","_jsxs","src","concat","photo","alt","Icon","name","likes","comments","Post","author","profilePicture","followingList","follwingUsers","_ref","user","FollowingFollowerList","followerList","followerUsers","_ref2","Fragment","FollowButton","onClick","followers","Header","Content","scrolling","Description","List","selection","verticalAlign","followings","firstName","lastName","Linkify","options","bio","Message","info","InfiniteScroll","dataLength","next","loader","Divider","hidden","connectedProfilePage","connect","userProfile","message","success","header","content","error","MessageContent","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","_extends","childrenUtils","handledProps","propTypes","MessageHeader","create","createShorthandFactory","val","MessageItem","defaultProps","as","MessageList","items","_map","_Component","_getPrototypeOf2","_this","_classCallCheck","_len","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","_defineProperty","_assertThisInitialized","e","onDismiss","_inherits","_createClass","key","value","_this$props","attached","color","compact","floating","icon","list","negative","positive","visible","warning","useKeyOnly","useKeyOrValueAndKey","dismissIcon","handleDismiss","autoGenerateKey","_isNil","createHTMLParagraph","disabled","indeterminate","inline","inverted"],"sourceRoot":""}