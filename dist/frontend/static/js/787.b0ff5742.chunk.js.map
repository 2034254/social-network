{"version":3,"file":"static/js/787.b0ff5742.chunk.js","mappings":"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","sources":["components/PostForm.js","components/Map.js","components/AddPostTextArea.js","components/AddTagsToImage.js","PostUploadPage/PostUploadPage.js","_services/postService.js","actions/postActions.js","components/Autosuggestion.js","components/Messages.js","reusable/ReusableUtils.js"],"sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport {\r\n  extractImageFileExtensionFromBase64,\r\n  base64StringtoFile\r\n} from \"../reusable/ReusableUtils\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { postActions } from \"../actions/postActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { alertActions } from \"../actions/alertActions\";\r\n\r\nconst imageMaxSize = 10485760; // bytes 10MB\r\nconst acceptedFileTypes =\r\n  \"image/x-png, image/png, image/jpg, image/jpeg, image/gif\";\r\nconst acceptedFileTypesArray = acceptedFileTypes.split(\",\").map(item => {\r\n  return item.trim();\r\n});\r\n\r\nclass PostForm extends PureComponent {\r\n  imagePreviewCanvasRef = React.createRef();\r\n  fileInputRef = React.createRef();\r\n  state = {\r\n    crop: {\r\n      aspect: 1\r\n    }\r\n  };\r\n  //<canvas ref={this.imagePreviewCanvasRef} />\r\n  componentDidMount = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(postActions.canvasHasValue(false));\r\n  };\r\n\r\n  handleOnCropChange = crop => {\r\n    this.setState({ crop: crop });\r\n  };\r\n\r\n  handleOnCropComplete = (crop, pixelCrop) => {\r\n    const {\r\n      post: { imgSrc },\r\n      dispatch\r\n    } = this.props;\r\n    dispatch(postActions.canvasHasValue(true));\r\n    const canvas = this.imagePreviewCanvasRef.current; // document.createElement('canvas');\r\n    canvas.width = pixelCrop.width;\r\n    canvas.height = pixelCrop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const image = new Image();\r\n    image.src = imgSrc;\r\n    image.onload = function() {\r\n      ctx.drawImage(\r\n        image,\r\n        pixelCrop.x,\r\n        pixelCrop.y,\r\n        pixelCrop.width,\r\n        pixelCrop.height,\r\n        0,\r\n        0,\r\n        pixelCrop.width,\r\n        pixelCrop.height\r\n      );\r\n      const canvasImage = canvas.toDataURL();\r\n      dispatch(postActions.getCroppedSrc(canvasImage));\r\n    };\r\n    //image64toCanvasRef(canvasRef, imgSrc, pixelCrop);\r\n  };\r\n\r\n  handleUpload = event => {\r\n    event.preventDefault();\r\n    const { imgSrc } = this.props.post;\r\n    if (imgSrc) {\r\n      const canvasRef = this.imagePreviewCanvasRef.current;\r\n      const { imgSrcExt } = this.props.post;\r\n      const imageData64 = canvasRef.toDataURL(\"image/\" + imgSrcExt);\r\n      const myFilename = \"previewFile.\" + imgSrcExt;\r\n      // file to be uploaded\r\n      const myNewCroppedFile = base64StringtoFile(imageData64, myFilename);\r\n      const fd = new FormData();\r\n      fd.append(\"photo\", myNewCroppedFile, myNewCroppedFile.name);\r\n      fd.append(\"description\", this.state.description);\r\n      const { dispatch } = this.props;\r\n      dispatch(postActions.addPost(fd));\r\n      //this.setState(initialState);\r\n    }\r\n  };\r\n\r\n  verifyFile = files => {\r\n    if (files && files.length > 0) {\r\n      const currentFile = files[0];\r\n      const currentFileType = currentFile.type;\r\n      const currentFileSize = currentFile.size;\r\n      const { dispatch } = this.props;\r\n\r\n      if (!acceptedFileTypesArray.includes(currentFileType)) {\r\n        dispatch(\r\n          alertActions.error(\r\n            \"This file is not allowed. Only images are allowed.\"\r\n          )\r\n        );\r\n\r\n        return false;\r\n      }\r\n\r\n      if (currentFileSize > imageMaxSize) {\r\n        dispatch(\r\n          alertActions.error(\r\n            \"This file is not allowed. \" +\r\n              currentFileSize +\r\n              \" bytes is too large\"\r\n          )\r\n        );\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  };\r\n\r\n  handleFileSelect = event => {\r\n    const { dispatch } = this.props;\r\n    const files = event.target.files;\r\n    if (files && files.length > 0) {\r\n      const isVerified = this.verifyFile(files);\r\n      if (isVerified) {\r\n        // imageBase64Data\r\n        const currentFile = files[0];\r\n        const myFileItemReader = new FileReader();\r\n        myFileItemReader.addEventListener(\r\n          \"load\",\r\n          () => {\r\n            // console.log(myFileItemReader.result)\r\n            const myResult = myFileItemReader.result;\r\n\r\n            dispatch(\r\n              postActions.selectImage(\r\n                myResult,\r\n                extractImageFileExtensionFromBase64(myResult)\r\n              )\r\n            );\r\n            this.setState({\r\n              imgSrc: myResult,\r\n              imgSrcExt: extractImageFileExtensionFromBase64(myResult)\r\n            });\r\n          },\r\n          false\r\n        );\r\n\r\n        myFileItemReader.readAsDataURL(currentFile);\r\n      }\r\n    }\r\n  };\r\n\r\n  changeAspect = e => {\r\n    if (e.target.name === \"1:1\") {\r\n      this.setState({ crop: { ...this.state.crop, aspect: 1 } });\r\n    } else {\r\n      this.setState({ crop: { ...this.state.crop, aspect: 16 / 9 } });\r\n    }\r\n  };\r\n\r\n  resetReducer = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch({ type: \"RESET_IMAGE\" });\r\n  };\r\n  render() {\r\n    const { imgSrc } = this.props.post;\r\n\r\n    return (\r\n      <div className=\"post-crop\">\r\n        {imgSrc !== null ? (\r\n          <div>\r\n            <div\r\n              style={{\r\n                padding: \"1% 0\",\r\n                display: \"grid\",\r\n                gridTemplateColumns: \"1fr auto\",\r\n                gridColumnGap: \"1rem\"\r\n              }}\r\n            >\r\n              <div>\r\n                <label className=\"ui massive fluid icon button\">\r\n                  <i className=\"file icon\" />\r\n                  Change Image\r\n                  <input\r\n                    style={{ display: \"none\" }}\r\n                    ref={this.fileInputRef}\r\n                    type=\"file\"\r\n                    accept={acceptedFileTypes}\r\n                    multiple={false}\r\n                    onChange={this.handleFileSelect}\r\n                  />\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <Button onClick={this.changeAspect} name=\"1:1\" size=\"massive\">\r\n                  1:1\r\n                </Button>\r\n                <Button onClick={this.changeAspect} name=\"16:9\" size=\"massive\">\r\n                  16:9\r\n                </Button>\r\n                <Button\r\n                  onClick={this.resetReducer}\r\n                  icon=\"close\"\r\n                  size=\"massive\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <ReactCrop\r\n              src={imgSrc}\r\n              crop={this.state.crop}\r\n              onComplete={this.handleOnCropComplete}\r\n              onChange={this.handleOnCropChange}\r\n            />\r\n\r\n            <canvas\r\n              id=\"cropped-image-canvas\"\r\n              ref={this.imagePreviewCanvasRef}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div style={{ padding: \"1% 0\" }}>\r\n            <label className=\"ui massive fluid icon button\">\r\n              <i className=\"file icon\" />\r\n              Select Image\r\n              <input\r\n                style={{ display: \"none\" }}\r\n                ref={this.fileInputRef}\r\n                type=\"file\"\r\n                accept={acceptedFileTypes}\r\n                multiple={false}\r\n                onChange={this.handleFileSelect}\r\n              />\r\n            </label>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // logged in user username\r\n  post: state.postUpload\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostForm);\r\n","import React, { Component } from \"react\";\r\nimport ReactMapGL from \"react-map-gl\";\r\nimport Geocoder from \"react-map-gl-geocoder\";\r\nimport { GeoJsonLayer } from \"deck.gl\";\r\nimport { connect } from \"react-redux\";\r\nimport { postActions } from \"../actions/postActions\";\r\n\r\nclass Map extends Component {\r\n  state = {\r\n    viewport: {\r\n      latitude: 37.7577,\r\n      longitude: -122.4376,\r\n      zoom: 8\r\n    },\r\n    searchResultLayer: null\r\n  };\r\n\r\n  mapRef = React.createRef();\r\n\r\n  handleViewportChange = viewport => {\r\n    this.setState({\r\n      viewport: { ...this.state.viewport, ...viewport }\r\n    });\r\n  };\r\n  handleGeocoderViewportChange = viewport => {\r\n    const geocoderDefaultOverrides = { transitionDuration: 1000 };\r\n\r\n    return this.handleViewportChange({\r\n      ...viewport,\r\n      ...geocoderDefaultOverrides\r\n    });\r\n  };\r\n\r\n  handleOnResult = event => {\r\n    const { text, geometry } = event.result;\r\n    const { dispatch } = this.props;\r\n    dispatch(postActions.mapLoactionSelect({ text, geometry }));\r\n    this.setState({\r\n      searchResultLayer: new GeoJsonLayer({\r\n        id: \"search-result\",\r\n        data: event.result.geometry,\r\n        getFillColor: [255, 0, 0, 128],\r\n        getRadius: 1000,\r\n        pointRadiusMinPixels: 10,\r\n        pointRadiusMaxPixels: 10\r\n      })\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { viewport } = this.state;\r\n    return (\r\n      <ReactMapGL\r\n        ref={this.mapRef}\r\n        mapboxApiAccessToken={\r\n          \"pk.eyJ1Ijoiam9obmJvcyIsImEiOiJjanl1b3l1MmkwaDdnM2pwaG5yNm1mZmlrIn0.O7X5QEcRO2ncLo_vLMVeTQ\"\r\n        }\r\n        width=\"100%\"\r\n        height=\"35rem\"\r\n        {...viewport}\r\n        onViewportChange={this.handleViewportChange}\r\n      >\r\n        <Geocoder\r\n          limit={5}\r\n          mapRef={this.mapRef}\r\n          onResult={this.handleOnResult}\r\n          onViewportChange={this.handleGeocoderViewportChange}\r\n          mapboxApiAccessToken={\r\n            \"pk.eyJ1Ijoiam9obmJvcyIsImEiOiJjanl1b3l1MmkwaDdnM2pwaG5yNm1mZmlrIn0.O7X5QEcRO2ncLo_vLMVeTQ\"\r\n          }\r\n        />\r\n      </ReactMapGL>\r\n    );\r\n  }\r\n}\r\n\r\nconst connectedMap = connect(null)(Map);\r\nexport { connectedMap as Map };\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport { postActions } from \"../actions/postActions\";\r\nimport { base64StringtoFile } from \"../reusable/ReusableUtils\";\r\nimport TextInput from \"react-autocomplete-input\";\r\nimport \"react-autocomplete-input/dist/bundle.css\";\r\nimport { debounce } from \"throttle-debounce\";\r\n\r\nfunction searchUser(q) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ q })\r\n  };\r\n\r\n  return fetch(\"/api/user/searchByUsername\", requestOptions).then(res => {\r\n    return res;\r\n  });\r\n}\r\n\r\nclass AddPostTextArea extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      value: \"\",\r\n      part: \"\",\r\n      suggestions: []\r\n    };\r\n\r\n    this.debouncedRequestOptions = debounce(500, this.handleRequestOptions);\r\n  }\r\n\r\n  handleChange = value => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { dispatch, imgSrcExt, cropImgSrc, location, divs } = this.props;\r\n    const imageData64 = cropImgSrc;\r\n    const myFilename = \"image.\" + imgSrcExt;\r\n    const myNewCroppedFile = base64StringtoFile(imageData64, myFilename);\r\n    const fd = new FormData();\r\n    fd.append(\"photo\", myNewCroppedFile, myNewCroppedFile.name);\r\n    fd.append(\"description\", this.state.value);\r\n    fd.append(\"tags\", JSON.stringify(divs));\r\n    Object.keys(location).forEach(key => fd.append(key, location[key]));\r\n\r\n    dispatch(postActions.addPost(fd));\r\n  };\r\n\r\n  // text in input is \"I want @ap\"\r\n  handleRequestOptions = part => {\r\n    this.setState({ part });\r\n    // console.log(part); // -> \"ap\", which is part after trigger \"@\"\r\n    if (part !== \"\") {\r\n      searchUser(part).then(response => {\r\n        if (part === this.state.part) {\r\n          response.json().then(results => {\r\n            this.setState({\r\n              isLoading: false,\r\n              suggestions: results.users.map(user => user.username)\r\n            });\r\n          });\r\n        } else {\r\n          // Ignore suggestions if input value changed\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Form size=\"big\" onSubmit={this.handleSubmit}>\r\n          <Form.Field>\r\n            <label>Description</label>\r\n            <TextInput\r\n              maxOptions={8}\r\n              offsetY={20}\r\n              minChars={1}\r\n              value={value}\r\n              onRequestOptions={this.debouncedRequestOptions}\r\n              options={suggestions}\r\n              onChange={this.handleChange}\r\n              placeholder=\"Description\"\r\n              type=\"textarea\"\r\n              name=\"description\"\r\n              style={{ minHeight: 100, maxHeight: 100 }}\r\n            />\r\n          </Form.Field>\r\n\r\n          <Button primary fluid size=\"big\">\r\n            Upload\r\n          </Button>\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { imgSrcExt, cropImgSrc, location, divs } = state.postUpload;\r\n  return {\r\n    imgSrcExt,\r\n    cropImgSrc,\r\n    location,\r\n    divs\r\n  };\r\n};\r\n\r\nconst connectedAddPostTextArea = connect(mapStateToProps)(AddPostTextArea);\r\nexport { connectedAddPostTextArea as AddPostTextArea };\r\n","import \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport uuid from \"uuid\";\r\n\r\nimport { Icon, Button } from \"semantic-ui-react\";\r\n\r\nimport { AutosuggestExample } from \"./Autosuggestion\";\r\n\r\nclass AddTagsToImage extends Component {\r\n  state = {\r\n    x: 0,\r\n    y: 0,\r\n    value: \"\",\r\n    displayInput: \"none\",\r\n    submitOnClick: false,\r\n    open: true\r\n  };\r\n\r\n  handleChange = value => {\r\n    this.setState({ value, submitOnClick: false });\r\n  };\r\n\r\n  deleteTag = e => {\r\n    const { dispatch } = this.props;\r\n    dispatch({ type: \"DELETE_IMAGE_TAG\", id: e.target.id });\r\n  };\r\n\r\n  handleAddAutocompleteTag = value => {\r\n    const { x, y } = this.state;\r\n    const { dispatch } = this.props;\r\n    if (value !== \"\") {\r\n      dispatch({ type: \"ADD_IMAGE_TAG\", div: { x, y, value, id: uuid.v4() } });\r\n      this.setState({\r\n        displayInput: \"none\",\r\n        submitOnClick: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleAddTag = () => {\r\n    const { x, y, value } = this.state;\r\n    const { dispatch } = this.props;\r\n    if (value !== \"\") {\r\n      dispatch({ type: \"ADD_IMAGE_TAG\", div: { x, y, value, id: uuid.v4() } });\r\n      this.setState({\r\n        submitOnClick: true,\r\n        displayInput: \"none\"\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClick = e => {\r\n    const x = Math.floor((e.nativeEvent.offsetX * 100) / e.target.width);\r\n    const y = Math.floor((e.nativeEvent.offsetY * 100) / e.target.height);\r\n    this.setState({ x, y, displayInput: \"inline-block\" });\r\n  };\r\n  render() {\r\n    const { cropImgSrc, divs } = this.props;\r\n    const { x, y, submitOnClick, displayInput } = this.state;\r\n\r\n    const renderDivs = divs.map(div => (\r\n      <div\r\n        key={div.id}\r\n        className=\"text-box\"\r\n        style={{ top: div.y + \"%\", left: div.x + \"%\" }}\r\n      >\r\n        <div className=\"tooltip tooltip-top\">\r\n          {div.value}\r\n          <Icon\r\n            id={div.id}\r\n            onClick={this.deleteTag}\r\n            style={{ cursor: \"pointer\", marginLeft: \"2px\", color: \"red\" }}\r\n            name=\"close\"\r\n          />\r\n        </div>\r\n      </div>\r\n    ));\r\n    return (\r\n      <Fragment>\r\n        <div className=\"add-image-tags\">\r\n          <div className=\"text-box\" style={{ top: y + \"%\", left: x + \"%\" }}>\r\n            <div\r\n              className=\"tooltip tooltip-top\"\r\n              style={{ display: displayInput }}\r\n            >\r\n              <div className=\"add-tag-input\">\r\n                <AutosuggestExample\r\n                  addTagPage={true}\r\n                  submitOnClick={submitOnClick} // clearn input of autosuggest\r\n                  handleChange={this.handleChange}\r\n                  addAutocompleteTag={this.handleAddAutocompleteTag}\r\n                />\r\n                <Button onClick={this.handleAddTag}>Add</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <img\r\n            alt=\"\"\r\n            onClick={this.handleClick}\r\n            style={{ width: \"100%\", height: \"auto\" }}\r\n            src={cropImgSrc}\r\n          />\r\n          {renderDivs}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  divs: state.postUpload.divs\r\n});\r\n\r\nconst connectedAddTagsToImage = connect(mapStateToProps)(AddTagsToImage);\r\nexport { connectedAddTagsToImage as AddTagsToImage };\r\n","import \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Icon, Button, Message } from \"semantic-ui-react\";\r\n\r\nimport PostForm from \"../components/PostForm\";\r\nimport { Map } from \"../components/Map\";\r\nimport { AddPostTextArea } from \"../components/AddPostTextArea\";\r\n\r\nimport { AddTagsToImage } from \"../components/AddTagsToImage\";\r\nimport Messages from \"../components/Messages\";\r\n\r\nfunction FirstStep() {\r\n  return <PostForm />;\r\n}\r\n// <div className=\"loading\">Loading&#8230;</div>\r\nfunction SecondtStep({ cropImgSrc, message }) {\r\n  return (\r\n    <div className=\"edit-post\">\r\n      {message}\r\n      <AddTagsToImage cropImgSrc={cropImgSrc} />\r\n      <div>\r\n        <Message size=\"large\" color=\"blue\">\r\n          Click on image to tag people\r\n        </Message>\r\n      </div>\r\n\r\n      <div>\r\n        <Map />\r\n      </div>\r\n      <div>\r\n        <Message size=\"large\" color=\"blue\">\r\n          Type @ to get suggestions\r\n        </Message>\r\n        <AddPostTextArea />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass PostUploadPage extends Component {\r\n  state = {\r\n    step: 0\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    document.title = \"Upload | social-network\";\r\n  };\r\n\r\n  handlePreviousClick = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch({ type: \"PREVIOUS_PAGE\" });\r\n  };\r\n\r\n  handleNextClick = () => {\r\n    const { dispatch } = this.props;\r\n\r\n    dispatch({ type: \"NEXT_PAGE\" });\r\n  };\r\n\r\n  render() {\r\n    let stepComponent = null;\r\n\r\n    const { canvasHasValue, cropImgSrc, step, uploading } = this.props.post;\r\n    const { alert } = this.props;\r\n\r\n    if (step === 0) {\r\n      stepComponent = <FirstStep />;\r\n    } else if (step === 1) {\r\n      stepComponent = <SecondtStep cropImgSrc={cropImgSrc} />;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        {uploading ? (\r\n          <div className=\"fullscreen-loader\">Loading&#8230;</div>\r\n        ) : null}\r\n        {alert.type ? <Messages alert={alert} /> : null}\r\n\r\n        {stepComponent}\r\n\r\n        {step === 1 ? (\r\n          <Button\r\n            style={{ marginBottom: \"30px\" }}\r\n            icon\r\n            labelPosition=\"left\"\r\n            size=\"huge\"\r\n            fluid\r\n            onClick={this.handlePreviousClick}\r\n          >\r\n            Previous\r\n            <Icon name=\"left arrow\" />\r\n          </Button>\r\n        ) : null}\r\n        {canvasHasValue && step === 0 ? (\r\n          <Button\r\n            icon\r\n            labelPosition=\"right\"\r\n            size=\"huge\"\r\n            fluid\r\n            onClick={this.handleNextClick}\r\n          >\r\n            Next\r\n            <Icon name=\"right arrow\" />\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.postUpload,\r\n  alert: state.alert\r\n});\r\n\r\nconst connectedPostUploadPage = connect(mapStateToProps)(PostUploadPage);\r\nexport { connectedPostUploadPage as default };\r\n","export const postService = {\r\n  fetchPosts,\r\n  getPostsByHashtag,\r\n  getPostsByLocation,\r\n  addPost,\r\n  addProfiePicture,\r\n  deletePost,\r\n  likePost,\r\n  getPostLikes,\r\n  getPost,\r\n  logout\r\n};\r\n\r\nfunction logout() {\r\n  // remove user from local storage to log user out\r\n  localStorage.removeItem(\"user\");\r\n}\r\n\r\nfunction fetchPosts(queryParams) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ ...queryParams })\r\n  };\r\n\r\n  return fetch(\"/api/post/getPosts/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nfunction getPostLikes(postId) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ postId })\r\n  };\r\n\r\n  return fetch(\"/api/post/getPostLikes/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(response => {\r\n      return response;\r\n    });\r\n}\r\n\r\nfunction getPostsByHashtag(hashtag, queryParams) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ hashtag, ...queryParams })\r\n  };\r\n\r\n  return fetch(\"/api/post/getPostsByHashtag/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nfunction getPostsByLocation(coordinates, queryParams) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ coordinates, ...queryParams })\r\n  };\r\n\r\n  return fetch(\"/api/post/getPostsByLocation/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nfunction deletePost(postId) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ postId })\r\n  };\r\n\r\n  return fetch(\"/api/post/delete/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction addPost(postData) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: postData\r\n  };\r\n\r\n  return fetch(\"/api/post/addPost/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res.post;\r\n    });\r\n}\r\n\r\nfunction addProfiePicture(postData) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: postData\r\n  };\r\n\r\n  return fetch(\"/api/user/addProfiePicture/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(user => {\r\n      return user;\r\n    });\r\n}\r\n\r\nfunction likePost(postId, authorId) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ postId, authorId })\r\n  };\r\n\r\n  return fetch(\"/api/post/likePost/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction getPost(postId) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ postId })\r\n  };\r\n\r\n  return fetch(\"/api/post/getPost/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then(text => {\r\n    const data = text && JSON.parse(text);\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        console.log(response);\r\n        // auto logout if 401 response returned from api\r\n        logout();\r\n        window.location.reload(true);\r\n      }\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n","import { postConstants } from \"../_constants/postConstants\";\r\nimport { userConstants } from \"../_constants/userConstants\";\r\nimport { postService } from \"../_services/postService\";\r\nimport { alertActions } from \"./alertActions\";\r\n\r\nexport const postActions = {\r\n  mapLoactionSelect,\r\n  changeTextareaValue,\r\n  canvasHasValue,\r\n  getCroppedSrc,\r\n  selectImage,\r\n  fetchPosts,\r\n  getPostsByHashtag,\r\n  getPostsByLocation,\r\n  deletePost,\r\n  addPost,\r\n  addProfiePicture,\r\n  likePost,\r\n  getPostLikes,\r\n  getPost\r\n};\r\n\r\nfunction getCroppedSrc(imgSrc) {\r\n  return dispatch => {\r\n    dispatch({ type: postConstants.IMAGE_CROP_SELECT, imgSrc });\r\n  };\r\n}\r\n\r\nfunction selectImage(imgSrc, imgSrcExt) {\r\n  return dispatch => {\r\n    dispatch({ type: postConstants.IMAGE_SELECT, imgSrc, imgSrcExt });\r\n  };\r\n}\r\n\r\nfunction canvasHasValue(hasValue) {\r\n  return dispatch => {\r\n    dispatch({ type: postConstants.CANVAS_HAS_VALUE, hasValue });\r\n  };\r\n}\r\n\r\nfunction changeTextareaValue(value) {\r\n  return dispatch => {\r\n    dispatch({ type: postConstants.TEXTAREA_VALUE_CAHNGE, value });\r\n  };\r\n}\r\n\r\nfunction mapLoactionSelect(location) {\r\n  return dispatch => {\r\n    dispatch({ type: postConstants.MAP_LOCATION_SELECT, location });\r\n  };\r\n}\r\n\r\nfunction addPost(postData) {\r\n  return dispatch => {\r\n    dispatch(request());\r\n\r\n    postService.addPost(postData).then(\r\n      post => {\r\n        dispatch(success(post));\r\n        dispatch(alertActions.success(\"Post uploaded\"));\r\n        dispatch({ type: postConstants.INIT_COMMENT, postId: post._id });\r\n      },\r\n      error => {\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n  function request() {\r\n    return { type: postConstants.ADD_POST_REQUEST };\r\n  }\r\n  function success(post) {\r\n    return { type: postConstants.ADD_POST_SUCCESS, post };\r\n  }\r\n}\r\n\r\nfunction addProfiePicture(postData) {\r\n  return dispatch => {\r\n    dispatch(request());\r\n\r\n    postService.addProfiePicture(postData).then(\r\n      res => {\r\n        dispatch(success(res.user));\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  function request() {\r\n    return { type: userConstants.GETUSER_REQUEST };\r\n  }\r\n  function success(user) {\r\n    return { type: userConstants.USER_UPDATE_PROFILEPICTURE_SUCCESS, user };\r\n  }\r\n}\r\n\r\nfunction fetchPosts(queryParams) {\r\n  return dispatch => {\r\n    //dispatch(request());\r\n\r\n    postService.fetchPosts(queryParams).then(\r\n      response => {\r\n        if (queryParams.initialFetch) {\r\n          const { posts, total } = response[0];\r\n          posts.forEach(post =>\r\n            dispatch({ type: postConstants.INIT_COMMENT, postId: post._id })\r\n          );\r\n          dispatch(success(posts, total[0], queryParams.initialFetch));\r\n        } else {\r\n          dispatch(success(response));\r\n          response.forEach(post =>\r\n            dispatch({ type: postConstants.INIT_COMMENT, postId: post._id })\r\n          );\r\n        }\r\n      },\r\n      error => {\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  function success(posts, total, initialFetch) {\r\n    return { type: postConstants.POSTS_SUCCESS, posts, total, initialFetch };\r\n  }\r\n}\r\n\r\nfunction deletePost(postId) {\r\n  return dispatch => {\r\n    dispatch(request());\r\n\r\n    postService.deletePost(postId).then(\r\n      res => {\r\n        dispatch(success(res));\r\n        dispatch(alertActions.success(res.message));\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  function request() {\r\n    return { type: postConstants.POST_DELETE_REQUEST };\r\n  }\r\n  function success(result) {\r\n    return { type: postConstants.POST_DELETE_SUCCESS, result };\r\n  }\r\n}\r\n\r\nfunction likePost(postId, auhtorId, postLikes) {\r\n  return dispatch => {\r\n    if (postLikes.some(e => e === postId)) {\r\n      dispatch(success(postConstants.DISLIKE_POST, { postId }));\r\n    } else {\r\n      dispatch(success(postConstants.LIKE_POST, { postId }));\r\n    }\r\n    postService.likePost(postId, auhtorId).then(\r\n      () => {},\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  function success(type, post) {\r\n    return { type, post };\r\n  }\r\n}\r\n\r\nfunction getPostLikes(postId) {\r\n  return dispatch => {\r\n    postService.getPostLikes(postId).then(\r\n      res => {\r\n        dispatch(success(res.users[0].users_likes));\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function success(postLikes) {\r\n    return { type: postConstants.GET_POST_LIKES, postLikes };\r\n  }\r\n}\r\n\r\nfunction getPost(postId) {\r\n  return dispatch => {\r\n    postService.getPost(postId).then(\r\n      response => {\r\n        document.title =\r\n          response.post[0].author[0].username + \"'s post | social-network\";\r\n        dispatch(success(postConstants.GET_POST, response.post));\r\n        dispatch({\r\n          type: postConstants.INIT_COMMENT,\r\n          postId: response.post[0]._id\r\n        });\r\n      },\r\n      error => {\r\n        dispatch(alertActions.error(error));\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function success(type, post) {\r\n    return { type, post };\r\n  }\r\n}\r\n\r\nfunction getPostsByHashtag(hashtag, queryParams) {\r\n  return dispatch => {\r\n    dispatch(request(queryParams.initialFetch));\r\n\r\n    postService.getPostsByHashtag(hashtag, queryParams).then(\r\n      response => {\r\n        if (queryParams.initialFetch) {\r\n          const { posts, total } = response[0];\r\n          dispatch(success(posts, total[0], queryParams.initialFetch, hashtag));\r\n        } else {\r\n          dispatch(success(response));\r\n        }\r\n      },\r\n      error => {\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  function request(initialFetch) {\r\n    return { type: postConstants.HASHTAG_POSTS_REQUEST, initialFetch };\r\n  }\r\n  function success(posts, total, initialFetch, hashtag) {\r\n    return {\r\n      type: postConstants.HASHTAG_POSTS_SUCCESS,\r\n      posts,\r\n      total,\r\n      initialFetch,\r\n      hashtag\r\n    };\r\n  }\r\n}\r\n\r\nfunction getPostsByLocation(coordinates, queryParams) {\r\n  return dispatch => {\r\n    dispatch(request(queryParams.initialFetch));\r\n\r\n    postService.getPostsByLocation(coordinates, queryParams).then(\r\n      response => {\r\n        if (queryParams.initialFetch) {\r\n          const { posts, total } = response[0];\r\n          dispatch(\r\n            success(posts, total[0], queryParams.initialFetch, coordinates)\r\n          );\r\n        } else {\r\n          dispatch(success(response));\r\n        }\r\n      },\r\n      error => {\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  function request(initialFetch) {\r\n    return { type: postConstants.LOCATION_POSTS_REQUEST, initialFetch };\r\n  }\r\n  function success(posts, total, initialFetch, coordinates) {\r\n    return {\r\n      type: postConstants.LOCATION_POSTS_SUCCESS,\r\n      posts,\r\n      total,\r\n      initialFetch,\r\n      coordinates\r\n    };\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { history } from \"../_helpers/history\";\r\nimport { throttle } from \"throttle-debounce\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction searchUser(q) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ q })\r\n  };\r\n\r\n  return fetch(\"/api/user/searchByUsername\", requestOptions).then(res => {\r\n    return res;\r\n  });\r\n}\r\n\r\nfunction getSuggestionValue({ username }) {\r\n  return username;\r\n}\r\n\r\nfunction renderSuggestion({ firstName, lastName, username, profilePicture }) {\r\n  return (\r\n    <Link to={\"/\" + username}>\r\n      <span className={\"suggestion-content \" + username}>\r\n        <img alt=\"\" src={\"/images/profile-picture/100x100/\" + profilePicture} />\r\n        <span className=\"autosuggestion-name\">\r\n          {username}\r\n          <p>{`${firstName} ${lastName}`}</p>\r\n        </span>\r\n      </span>\r\n    </Link>\r\n  );\r\n}\r\n\r\nfunction renderSuggestionForTags({\r\n  firstName,\r\n  lastName,\r\n  username,\r\n  profilePicture\r\n}) {\r\n  return (\r\n    <span className={\"suggestion-content \" + username}>\r\n      <img alt=\"\" src={\"/images/profile-picture/100x100/\" + profilePicture} />\r\n      <span className=\"autosuggestion-name\">\r\n        {username}\r\n        <p>{`${firstName} ${lastName}`}</p>\r\n      </span>\r\n    </span>\r\n  );\r\n}\r\n\r\nclass AutosuggestExample extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: \"\",\r\n      suggestions: [],\r\n      isLoading: false\r\n    };\r\n\r\n    this.debouncedLoadSuggestions = throttle(500, this.loadSuggestions);\r\n  }\r\n\r\n  loadSuggestions(value) {\r\n    const autosuggestInput = document.querySelector(\".react-autosuggest__input\")\r\n      .classList;\r\n    autosuggestInput.add(\"user-suggestion-loading\");\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n\r\n    searchUser(value).then(response => {\r\n      if (value === this.state.value) {\r\n        response.json().then(results => {\r\n          autosuggestInput.remove(\"user-suggestion-loading\");\r\n          this.setState({\r\n            isLoading: false,\r\n            suggestions: results.users.map(user => {\r\n              return {\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                username: user.username,\r\n                profilePicture: user.profilePicture\r\n              };\r\n            })\r\n          });\r\n        });\r\n      } else {\r\n        autosuggestInput.remove(\"user-suggestion-loading\");\r\n        // Ignore suggestions if input value changed\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onKeyDown = event => {\r\n    const { addTagPage } = this.props;\r\n    const { value } = this.state;\r\n\r\n    if (event.keyCode === 13 && !addTagPage && value !== \"\") {\r\n      history.push(`/${value}`);\r\n    } else if (event.keyCode === 13 && addTagPage) {\r\n      this.props.addAutocompleteTag(value);\r\n    }\r\n  };\r\n\r\n  onChange = (event, { newValue }) => {\r\n    const { addTagPage } = this.props;\r\n    if (addTagPage) {\r\n      this.props.handleChange(newValue);\r\n    }\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.debouncedLoadSuggestions(value);\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n    const { addTagPage, submitOnClick } = this.props;\r\n    const inputProps = {\r\n      placeholder: \"Search\",\r\n      value: submitOnClick ? \"\" : value, // when adding image tags\r\n      onChange: this.onChange,\r\n      onKeyDown: this.onKeyDown\r\n    };\r\n\r\n    return (\r\n      <Autosuggest\r\n        onKeyDown={this.handleOnKeyDown}\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={\r\n          addTagPage ? renderSuggestionForTags : renderSuggestion\r\n        }\r\n        inputProps={inputProps}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst connectedAutosuggestExample = connect(null)(AutosuggestExample);\r\nexport { connectedAutosuggestExample as AutosuggestExample };\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\nexport default function Messages({ alert: { type, message } }) {\r\n  if (type === \"success\") {\r\n    return <Message success header=\"Success\" content={message} />;\r\n  } else if (type === \"error\") {\r\n    return <Message error header=\"Error\" content={message} />;\r\n  }\r\n  return null;\r\n}\r\n","// A few JavaScript Functions for Images and Files\r\n// Author: Justin Mitchel\r\n// Source: https://kirr.co/ndywes\r\n\r\n// Convert a Base64-encoded string to a File object\r\nexport function base64StringtoFile(base64String, filename) {\r\n  var arr = base64String.split(\",\"),\r\n    mime = arr[0].match(/:(.*?);/)[1],\r\n    bstr = atob(arr[1]),\r\n    n = bstr.length,\r\n    u8arr = new Uint8Array(n);\r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  return new File([u8arr], filename, { type: mime });\r\n}\r\n\r\n// Download a Base64-encoded file\r\n\r\nexport function downloadBase64File(base64Data, filename) {\r\n  var element = document.createElement(\"a\");\r\n  element.setAttribute(\"href\", base64Data);\r\n  element.setAttribute(\"download\", filename);\r\n  element.style.display = \"none\";\r\n  document.body.appendChild(element);\r\n  element.click();\r\n  document.body.removeChild(element);\r\n}\r\n\r\n// Extract an Base64 Image's File Extension\r\nexport function extractImageFileExtensionFromBase64(base64Data) {\r\n  return base64Data.substring(\r\n    \"data:image/\".length,\r\n    base64Data.indexOf(\";base64\")\r\n  );\r\n}\r\n\r\n// Base64 Image to Canvas with a Crop\r\nexport function image64toCanvasRef(canvasRef, image64, pixelCrop) {\r\n  const canvas = canvasRef; // document.createElement('canvas');\r\n  canvas.width = pixelCrop.width;\r\n  canvas.height = pixelCrop.height;\r\n  const ctx = canvas.getContext(\"2d\");\r\n  const image = new Image();\r\n  image.src = image64;\r\n  image.onload = function() {\r\n    ctx.drawImage(\r\n      image,\r\n      pixelCrop.x,\r\n      pixelCrop.y,\r\n      pixelCrop.width,\r\n      pixelCrop.height,\r\n      0,\r\n      0,\r\n      pixelCrop.width,\r\n      pixelCrop.height\r\n    );\r\n  };\r\n}\r\n"],"names":["acceptedFileTypes","acceptedFileTypesArray","split","map","item","trim","PostForm","PureComponent","constructor","arguments","imagePreviewCanvasRef","React","fileInputRef","state","crop","aspect","componentDidMount","dispatch","this","props","postActions","canvasHasValue","handleOnCropChange","setState","handleOnCropComplete","pixelCrop","post","imgSrc","canvas","current","width","height","ctx","getContext","image","Image","src","onload","drawImage","x","y","canvasImage","toDataURL","getCroppedSrc","handleUpload","event","preventDefault","canvasRef","imgSrcExt","imageData64","myFilename","myNewCroppedFile","base64StringtoFile","fd","FormData","append","name","description","addPost","verifyFile","files","length","currentFile","currentFileType","type","currentFileSize","size","includes","alertActions","error","handleFileSelect","target","myFileItemReader","FileReader","addEventListener","myResult","result","selectImage","extractImageFileExtensionFromBase64","readAsDataURL","changeAspect","e","resetReducer","render","_jsx","className","children","_jsxs","style","padding","display","gridTemplateColumns","gridColumnGap","ref","accept","multiple","onChange","Button","onClick","icon","ReactCrop","onComplete","id","connect","postUpload","Map","Component","viewport","latitude","longitude","zoom","searchResultLayer","mapRef","handleViewportChange","handleGeocoderViewportChange","transitionDuration","handleOnResult","text","geometry","mapLoactionSelect","GeoJsonLayer","data","getFillColor","getRadius","pointRadiusMinPixels","pointRadiusMaxPixels","ReactMapGL","mapboxApiAccessToken","onViewportChange","Geocoder","limit","onResult","connectedMap","AddPostTextArea","super","handleChange","value","handleSubmit","cropImgSrc","location","divs","JSON","stringify","Object","keys","forEach","key","handleRequestOptions","part","q","requestOptions","method","headers","Authorization","parse","localStorage","getItem","token","body","fetch","then","res","searchUser","response","json","results","isLoading","suggestions","users","user","username","debouncedRequestOptions","debounce","Fragment","Form","onSubmit","Field","TextInput","maxOptions","offsetY","minChars","onRequestOptions","options","placeholder","minHeight","maxHeight","primary","fluid","connectedAddPostTextArea","AddTagsToImage","displayInput","submitOnClick","open","deleteTag","handleAddAutocompleteTag","div","uuid","handleAddTag","handleClick","Math","floor","nativeEvent","offsetX","renderDivs","top","left","Icon","cursor","marginLeft","color","AutosuggestExample","addTagPage","addAutocompleteTag","alt","connectedAddTagsToImage","FirstStep","SecondtStep","_ref","message","Message","PostUploadPage","step","document","title","handlePreviousClick","handleNextClick","stepComponent","uploading","alert","Messages","marginBottom","labelPosition","connectedPostUploadPage","postService","fetchPosts","queryParams","handleResponse","getPostsByHashtag","hashtag","getPostsByLocation","coordinates","postData","addProfiePicture","deletePost","postId","likePost","authorId","getPostLikes","getPost","logout","removeItem","ok","status","console","log","window","reload","statusText","Promise","reject","postConstants","MAP_LOCATION_SELECT","changeTextareaValue","TEXTAREA_VALUE_CAHNGE","hasValue","CANVAS_HAS_VALUE","IMAGE_CROP_SELECT","IMAGE_SELECT","initialFetch","posts","total","INIT_COMMENT","_id","success","POSTS_SUCCESS","HASHTAG_POSTS_REQUEST","HASHTAG_POSTS_SUCCESS","LOCATION_POSTS_REQUEST","LOCATION_POSTS_SUCCESS","POST_DELETE_REQUEST","POST_DELETE_SUCCESS","ADD_POST_REQUEST","ADD_POST_SUCCESS","userConstants","GETUSER_REQUEST","USER_UPDATE_PROFILEPICTURE_SUCCESS","auhtorId","postLikes","some","DISLIKE_POST","LIKE_POST","users_likes","GET_POST_LIKES","author","GET_POST","getSuggestionValue","renderSuggestion","_ref2","firstName","lastName","profilePicture","Link","to","concat","renderSuggestionForTags","_ref3","onKeyDown","keyCode","history","push","_ref4","newValue","onSuggestionsFetchRequested","_ref5","debouncedLoadSuggestions","onSuggestionsClearRequested","throttle","loadSuggestions","autosuggestInput","querySelector","classList","add","remove","inputProps","Autosuggest","handleOnKeyDown","connectedAutosuggestExample","header","content","base64String","filename","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","base64Data","substring","indexOf","image64toCanvasRef","image64"],"sourceRoot":""}