{"version":3,"sources":["_services/postService.js","actions/postActions.js","components/Messages.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageContent.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageItem.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageList.js","../node_modules/semantic-ui-react/dist/es/collections/Message/Message.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","LocationPage/LocationPage.js"],"names":["postService","fetchPosts","queryParams","requestOptions","method","headers","Content-Type","Authorization","JSON","parse","localStorage","getItem","token","body","stringify","Object","objectSpread","fetch","then","handleResponse","response","data","getPostsByHashtag","hashtag","getPostsByLocation","coordinates","addPost","postData","res","post","addProfiePicture","user","deletePost","postId","likePost","authorId","getPostLikes","getPost","logout","removeItem","text","ok","status","console","log","window","location","reload","error","message","statusText","Promise","reject","__webpack_require__","d","__webpack_exports__","postActions","mapLoactionSelect","dispatch","type","postConstants","MAP_LOCATION_SELECT","changeTextareaValue","value","TEXTAREA_VALUE_CAHNGE","canvasHasValue","hasValue","CANVAS_HAS_VALUE","getCroppedSrc","imgSrc","IMAGE_CROP_SELECT","selectImage","imgSrcExt","IMAGE_SELECT","initialFetch","_response$","posts","total","forEach","INIT_COMMENT","_id","success","alertActions","POSTS_SUCCESS","HASHTAG_POSTS_REQUEST","_response$2","HASHTAG_POSTS_SUCCESS","LOCATION_POSTS_REQUEST","_response$3","LOCATION_POSTS_SUCCESS","POST_DELETE_REQUEST","result","POST_DELETE_SUCCESS","ADD_POST_REQUEST","ADD_POST_SUCCESS","userConstants","GETUSER_REQUEST","USER_UPDATE_PROFILEPICTURE_SUCCESS","auhtorId","postLikes","some","e","DISLIKE_POST","LIKE_POST","users","users_likes","GET_POST_LIKES","document","title","author","username","GET_POST","Messages","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","_ref","_ref$alert","alert","a","createElement","header","content","MessageContent","props","children","className","classes","classnames_default","rest","getUnhandledProps","ElementType","getElementType","react_default","extends_default","lib","isNil","handledProps","propTypes","Message_MessageContent","MessageHeader","create","factories","val","Message_MessageHeader","MessageItem","defaultProps","as","Message_MessageItem","MessageList","items","map_default","Message_MessageList","Message_Message","_Component","Message","_getPrototypeOf2","_this","classCallCheck_default","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn_default","getPrototypeOf_default","call","apply","concat","defineProperty_default","assertThisInitialized_default","onDismiss","inherits_default","createClass_default","key","_this$props","attached","color","compact","floating","hidden","icon","info","list","negative","positive","size","visible","warning","classNameBuilders","dismissIcon","Icon","name","onClick","handleDismiss","autoGenerateKey","isNil_default","react","_slicedToArray","arr","i","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","_iterableToArrayLimit","TypeError","_nonIterableRest","LocationPage","componentDidMount","match","params","fetchData","_this$props2","postsByLocation","lastId","_this$props3","_this$props3$data","totalPostsByLocation","hasMore","_match$params$coordin2","split","lat","lng","locationPosts","map","Link","to","src","photo","alt","likes","comments","address","style","fontSize","paddingBottom","Divider","lib_default","dataLength","loader","Component","connectedLocationPage","connect","state","fetchingUserData","loadingUser"],"mappings":"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","file":"static/js/19.705113dd.chunk.js","sourcesContent":["export const postService = {\r\n  fetchPosts,\r\n  getPostsByHashtag,\r\n  getPostsByLocation,\r\n  addPost,\r\n  addProfiePicture,\r\n  deletePost,\r\n  likePost,\r\n  getPostLikes,\r\n  getPost,\r\n  logout\r\n};\r\n\r\nfunction logout() {\r\n  // remove user from local storage to log user out\r\n  localStorage.removeItem(\"user\");\r\n}\r\n\r\nfunction fetchPosts(queryParams) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ ...queryParams })\r\n  };\r\n\r\n  return fetch(\"/api/post/getPosts/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nfunction getPostLikes(postId) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ postId })\r\n  };\r\n\r\n  return fetch(\"/api/post/getPostLikes/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(response => {\r\n      return response;\r\n    });\r\n}\r\n\r\nfunction getPostsByHashtag(hashtag, queryParams) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ hashtag, ...queryParams })\r\n  };\r\n\r\n  return fetch(\"/api/post/getPostsByHashtag/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nfunction getPostsByLocation(coordinates, queryParams) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ coordinates, ...queryParams })\r\n  };\r\n\r\n  return fetch(\"/api/post/getPostsByLocation/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(response => {\r\n      return response.data;\r\n    });\r\n}\r\n\r\nfunction deletePost(postId) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ postId })\r\n  };\r\n\r\n  return fetch(\"/api/post/delete/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction addPost(postData) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: postData\r\n  };\r\n\r\n  return fetch(\"/api/post/addPost/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res.post;\r\n    });\r\n}\r\n\r\nfunction addProfiePicture(postData) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: postData\r\n  };\r\n\r\n  return fetch(\"/api/user/addProfiePicture/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(user => {\r\n      return user;\r\n    });\r\n}\r\n\r\nfunction likePost(postId, authorId) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ postId, authorId })\r\n  };\r\n\r\n  return fetch(\"/api/post/likePost/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction getPost(postId) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({ postId })\r\n  };\r\n\r\n  return fetch(\"/api/post/getPost/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then(text => {\r\n    const data = text && JSON.parse(text);\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        console.log(response);\r\n        // auto logout if 401 response returned from api\r\n        logout();\r\n        window.location.reload(true);\r\n      }\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n","import { postConstants } from \"../_constants/postConstants\";\r\nimport { userConstants } from \"../_constants/userConstants\";\r\nimport { postService } from \"../_services/postService\";\r\nimport { alertActions } from \"./alertActions\";\r\n\r\nexport const postActions = {\r\n  mapLoactionSelect,\r\n  changeTextareaValue,\r\n  canvasHasValue,\r\n  getCroppedSrc,\r\n  selectImage,\r\n  fetchPosts,\r\n  getPostsByHashtag,\r\n  getPostsByLocation,\r\n  deletePost,\r\n  addPost,\r\n  addProfiePicture,\r\n  likePost,\r\n  getPostLikes,\r\n  getPost\r\n};\r\n\r\nfunction getCroppedSrc(imgSrc) {\r\n  return dispatch => {\r\n    dispatch({ type: postConstants.IMAGE_CROP_SELECT, imgSrc });\r\n  };\r\n}\r\n\r\nfunction selectImage(imgSrc, imgSrcExt) {\r\n  return dispatch => {\r\n    dispatch({ type: postConstants.IMAGE_SELECT, imgSrc, imgSrcExt });\r\n  };\r\n}\r\n\r\nfunction canvasHasValue(hasValue) {\r\n  return dispatch => {\r\n    dispatch({ type: postConstants.CANVAS_HAS_VALUE, hasValue });\r\n  };\r\n}\r\n\r\nfunction changeTextareaValue(value) {\r\n  return dispatch => {\r\n    dispatch({ type: postConstants.TEXTAREA_VALUE_CAHNGE, value });\r\n  };\r\n}\r\n\r\nfunction mapLoactionSelect(location) {\r\n  return dispatch => {\r\n    dispatch({ type: postConstants.MAP_LOCATION_SELECT, location });\r\n  };\r\n}\r\n\r\nfunction addPost(postData) {\r\n  return dispatch => {\r\n    dispatch(request());\r\n\r\n    postService.addPost(postData).then(\r\n      post => {\r\n        dispatch(success(post));\r\n        dispatch(alertActions.success(\"Post uploaded\"));\r\n        dispatch({ type: postConstants.INIT_COMMENT, postId: post._id });\r\n      },\r\n      error => {\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n  function request() {\r\n    return { type: postConstants.ADD_POST_REQUEST };\r\n  }\r\n  function success(post) {\r\n    return { type: postConstants.ADD_POST_SUCCESS, post };\r\n  }\r\n}\r\n\r\nfunction addProfiePicture(postData) {\r\n  return dispatch => {\r\n    dispatch(request());\r\n\r\n    postService.addProfiePicture(postData).then(\r\n      res => {\r\n        dispatch(success(res.user));\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  function request() {\r\n    return { type: userConstants.GETUSER_REQUEST };\r\n  }\r\n  function success(user) {\r\n    return { type: userConstants.USER_UPDATE_PROFILEPICTURE_SUCCESS, user };\r\n  }\r\n}\r\n\r\nfunction fetchPosts(queryParams) {\r\n  return dispatch => {\r\n    //dispatch(request());\r\n\r\n    postService.fetchPosts(queryParams).then(\r\n      response => {\r\n        if (queryParams.initialFetch) {\r\n          const { posts, total } = response[0];\r\n          posts.forEach(post =>\r\n            dispatch({ type: postConstants.INIT_COMMENT, postId: post._id })\r\n          );\r\n          dispatch(success(posts, total[0], queryParams.initialFetch));\r\n        } else {\r\n          dispatch(success(response));\r\n          response.forEach(post =>\r\n            dispatch({ type: postConstants.INIT_COMMENT, postId: post._id })\r\n          );\r\n        }\r\n      },\r\n      error => {\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  function success(posts, total, initialFetch) {\r\n    return { type: postConstants.POSTS_SUCCESS, posts, total, initialFetch };\r\n  }\r\n}\r\n\r\nfunction deletePost(postId) {\r\n  return dispatch => {\r\n    dispatch(request());\r\n\r\n    postService.deletePost(postId).then(\r\n      res => {\r\n        dispatch(success(res));\r\n        dispatch(alertActions.success(res.message));\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  function request() {\r\n    return { type: postConstants.POST_DELETE_REQUEST };\r\n  }\r\n  function success(result) {\r\n    return { type: postConstants.POST_DELETE_SUCCESS, result };\r\n  }\r\n}\r\n\r\nfunction likePost(postId, auhtorId, postLikes) {\r\n  return dispatch => {\r\n    if (postLikes.some(e => e === postId)) {\r\n      dispatch(success(postConstants.DISLIKE_POST, { postId }));\r\n    } else {\r\n      dispatch(success(postConstants.LIKE_POST, { postId }));\r\n    }\r\n    postService.likePost(postId, auhtorId).then(\r\n      () => {},\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  function success(type, post) {\r\n    return { type, post };\r\n  }\r\n}\r\n\r\nfunction getPostLikes(postId) {\r\n  return dispatch => {\r\n    postService.getPostLikes(postId).then(\r\n      res => {\r\n        dispatch(success(res.users[0].users_likes));\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function success(postLikes) {\r\n    return { type: postConstants.GET_POST_LIKES, postLikes };\r\n  }\r\n}\r\n\r\nfunction getPost(postId) {\r\n  return dispatch => {\r\n    postService.getPost(postId).then(\r\n      response => {\r\n        document.title =\r\n          response.post[0].author[0].username + \"'s post | social-network\";\r\n        dispatch(success(postConstants.GET_POST, response.post));\r\n        dispatch({\r\n          type: postConstants.INIT_COMMENT,\r\n          postId: response.post[0]._id\r\n        });\r\n      },\r\n      error => {\r\n        dispatch(alertActions.error(error));\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function success(type, post) {\r\n    return { type, post };\r\n  }\r\n}\r\n\r\nfunction getPostsByHashtag(hashtag, queryParams) {\r\n  return dispatch => {\r\n    dispatch(request(queryParams.initialFetch));\r\n\r\n    postService.getPostsByHashtag(hashtag, queryParams).then(\r\n      response => {\r\n        if (queryParams.initialFetch) {\r\n          const { posts, total } = response[0];\r\n          dispatch(success(posts, total[0], queryParams.initialFetch, hashtag));\r\n        } else {\r\n          dispatch(success(response));\r\n        }\r\n      },\r\n      error => {\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  function request(initialFetch) {\r\n    return { type: postConstants.HASHTAG_POSTS_REQUEST, initialFetch };\r\n  }\r\n  function success(posts, total, initialFetch, hashtag) {\r\n    return {\r\n      type: postConstants.HASHTAG_POSTS_SUCCESS,\r\n      posts,\r\n      total,\r\n      initialFetch,\r\n      hashtag\r\n    };\r\n  }\r\n}\r\n\r\nfunction getPostsByLocation(coordinates, queryParams) {\r\n  return dispatch => {\r\n    dispatch(request(queryParams.initialFetch));\r\n\r\n    postService.getPostsByLocation(coordinates, queryParams).then(\r\n      response => {\r\n        if (queryParams.initialFetch) {\r\n          const { posts, total } = response[0];\r\n          dispatch(\r\n            success(posts, total[0], queryParams.initialFetch, coordinates)\r\n          );\r\n        } else {\r\n          dispatch(success(response));\r\n        }\r\n      },\r\n      error => {\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  function request(initialFetch) {\r\n    return { type: postConstants.LOCATION_POSTS_REQUEST, initialFetch };\r\n  }\r\n  function success(posts, total, initialFetch, coordinates) {\r\n    return {\r\n      type: postConstants.LOCATION_POSTS_SUCCESS,\r\n      posts,\r\n      total,\r\n      initialFetch,\r\n      coordinates\r\n    };\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\nexport default function Messages({ alert: { type, message } }) {\r\n  if (type === \"success\") {\r\n    return <Message success header=\"Success\" content={message} />;\r\n  } else if (type === \"error\") {\r\n    return <Message error header=\"Error\" content={message} />;\r\n  }\r\n  return null;\r\n}\r\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a content.\n */\n\nfunction MessageContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageContent, props);\n  var ElementType = getElementType(MessageContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default MessageContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a header.\n */\n\nfunction MessageHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(MessageHeader, props);\n  var ElementType = getElementType(MessageHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageHeader.create = createShorthandFactory(MessageHeader, function (val) {\n  return {\n    content: val\n  };\n});\nexport default MessageHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message list can contain an item.\n */\n\nfunction MessageItem(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageItem, props);\n  var ElementType = getElementType(MessageItem, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageItem.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageItem.defaultProps = {\n  as: 'li'\n};\nMessageItem.create = createShorthandFactory(MessageItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default MessageItem;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport MessageItem from './MessageItem';\n/**\n * A message can contain a list of items.\n */\n\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children);\n}\n\nMessageList.handledProps = [\"as\", \"children\", \"className\", \"items\"];\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\nMessageList.defaultProps = {\n  as: 'ul'\n};\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return {\n    items: val\n  };\n});\nexport default MessageList;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isNil from \"lodash/isNil\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLParagraph, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MessageContent from './MessageContent';\nimport MessageHeader from './MessageHeader';\nimport MessageList from './MessageList';\nimport MessageItem from './MessageItem';\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\n\nvar Message = /*#__PURE__*/function (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Message)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDismiss\", function (e) {\n      var onDismiss = _this.props.onDismiss;\n      if (onDismiss) onDismiss(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          attached = _this$props.attached,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          compact = _this$props.compact,\n          content = _this$props.content,\n          error = _this$props.error,\n          floating = _this$props.floating,\n          header = _this$props.header,\n          hidden = _this$props.hidden,\n          icon = _this$props.icon,\n          info = _this$props.info,\n          list = _this$props.list,\n          negative = _this$props.negative,\n          onDismiss = _this$props.onDismiss,\n          positive = _this$props.positive,\n          size = _this$props.size,\n          success = _this$props.success,\n          visible = _this$props.visible,\n          warning = _this$props.warning;\n      var classes = cx('ui', color, size, useKeyOnly(compact, 'compact'), useKeyOnly(error, 'error'), useKeyOnly(floating, 'floating'), useKeyOnly(hidden, 'hidden'), useKeyOnly(icon, 'icon'), useKeyOnly(info, 'info'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(success, 'success'), useKeyOnly(visible, 'visible'), useKeyOnly(warning, 'warning'), useKeyOrValueAndKey(attached, 'attached'), 'message', className);\n      var dismissIcon = onDismiss && React.createElement(Icon, {\n        name: \"close\",\n        onClick: this.handleDismiss\n      });\n      var rest = getUnhandledProps(Message, this.props);\n      var ElementType = getElementType(Message, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), dismissIcon, children);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), dismissIcon, Icon.create(icon, {\n        autoGenerateKey: false\n      }), (!_isNil(header) || !_isNil(content) || !_isNil(list)) && React.createElement(MessageContent, null, MessageHeader.create(header, {\n        autoGenerateKey: false\n      }), MessageList.create(list, {\n        autoGenerateKey: false\n      }), createHTMLParagraph(content, {\n        autoGenerateKey: false\n      })));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\n_defineProperty(Message, \"Content\", MessageContent);\n\n_defineProperty(Message, \"Header\", MessageHeader);\n\n_defineProperty(Message, \"List\", MessageList);\n\n_defineProperty(Message, \"Item\", MessageItem);\n\n_defineProperty(Message, \"handledProps\", [\"as\", \"attached\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"error\", \"floating\", \"header\", \"hidden\", \"icon\", \"info\", \"list\", \"negative\", \"onDismiss\", \"positive\", \"size\", \"success\", \"visible\", \"warning\"]);\n\nexport { Message as default };\nMessage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['bottom', 'top'])]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A message can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: PropTypes.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: PropTypes.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: PropTypes.bool,\n\n  /** A message can contain an icon. */\n  icon: PropTypes.oneOfType([customPropTypes.itemShorthand, PropTypes.bool]),\n\n  /** A message may be formatted to display information. */\n  info: PropTypes.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: PropTypes.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: PropTypes.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: PropTypes.bool,\n\n  /** A message can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: PropTypes.bool,\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: PropTypes.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: PropTypes.bool\n} : {};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon, Divider } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Messages from \"../components/Messages\";\r\nimport { postActions } from \"../actions/postActions\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nclass LocationPage extends Component {\r\n  componentDidMount = () => {\r\n    const {\r\n      match,\r\n      dispatch,\r\n      data: { coordinates }\r\n    } = this.props;\r\n\r\n    if (coordinates !== match.params.coordinates) {\r\n      dispatch(\r\n        postActions.getPostsByLocation(match.params.coordinates, {\r\n          initialFetch: true,\r\n          coordinates: match.params.coordinates\r\n        })\r\n      );\r\n    }\r\n    document.title = \"Location Page | social-network\";\r\n  };\r\n\r\n  fetchData = () => {\r\n    const {\r\n      dispatch,\r\n      data: { postsByLocation },\r\n      match\r\n    } = this.props;\r\n    const lastId = postsByLocation[postsByLocation.length - 1]._id;\r\n    dispatch(\r\n      postActions.getPostsByLocation(match.params.coordinates, {\r\n        initialFetch: false,\r\n        lastId\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      data: { postsByLocation, totalPostsByLocation },\r\n      alert,\r\n      match\r\n    } = this.props;\r\n    const hasMore =\r\n      postsByLocation.length === totalPostsByLocation ? false : true;\r\n    const [lat, lng] = match.params.coordinates.split(\",\");\r\n    const locationPosts = postsByLocation.map(post => {\r\n      return (\r\n        <Link to={\"/p/\" + post._id} key={post._id}>\r\n          <div className=\"gallery-item\">\r\n            <img\r\n              src={`/images/post-images/thumbnail/${post.photo}`}\r\n              className=\"gallery-image\"\r\n              alt=\"\"\r\n            />\r\n\r\n            <div className=\"gallery-item-info\">\r\n              <ul>\r\n                <li className=\"gallery-item-likes\">\r\n                  <span className=\"visually-hidden\">Likes:</span>\r\n                  <Icon name=\"heart\" /> {post.likes}\r\n                </li>\r\n                <li className=\"gallery-item-comments\">\r\n                  <span className=\"visually-hidden\">Comments:</span>\r\n                  <Icon name=\"comment\" /> {post.comments}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      );\r\n    });\r\n    if (alert.type) {\r\n      return (\r\n        <div className=\"container\">\r\n          <Messages alert={alert} />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <div className=\"map-header\">\r\n          <img\r\n            alt=\"\"\r\n            src={`https://api.mapbox.com/styles/v1/mapbox/streets-v11/static/pin-l(${lat},${lng})/${lat},${lng},13,0.00,0.00/1200x250@2x?access_token=pk.eyJ1Ijoiam9obmJvcyIsImEiOiJjanl1b3l1MmkwaDdnM2pwaG5yNm1mZmlrIn0.O7X5QEcRO2ncLo_vLMVeTQ`}\r\n          />\r\n          <div className=\"location-name\">\r\n            {postsByLocation[0] ? postsByLocation[0].location.address : \"\"}\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div>\r\n            <p style={{ fontSize: \"2rem\", paddingBottom: \"1%\" }}>\r\n              {\" \"}\r\n              {totalPostsByLocation} posts\r\n            </p>\r\n            <Divider></Divider>\r\n            <InfiniteScroll\r\n              className=\"gallery\"\r\n              dataLength={locationPosts.length} //This is important field to render the next data\r\n              next={this.fetchData}\r\n              hasMore={hasMore}\r\n              loader={<h4>Loading...</h4>}\r\n            >\r\n              {locationPosts}\r\n            </InfiniteScroll>\r\n          </div>\r\n        </div>\r\n        <Divider hidden></Divider>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.post,\r\n  fetchingUserData: state.user.loadingUser,\r\n  alert: state.alert\r\n});\r\n\r\nconst connectedLocationPage = connect(mapStateToProps)(LocationPage);\r\nexport { connectedLocationPage as default };\r\n"],"sourceRoot":""}