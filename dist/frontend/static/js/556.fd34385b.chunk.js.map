{"version":3,"file":"static/js/556.fd34385b.chunk.js","mappings":"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","sources":["_helpers/MediaHandler.js","_services/chatService.js","actions/chatActions.js","_services/userService.js","actions/userActions.js","components/Autosuggestion.js","_services/socketService.js","actions/socketActions.js","components/NotificationPopup.js","MessengerPage/AnsweringModal.js","components/Navbar.js"],"sourcesContent":["export class MediaHandler {\r\n  constructor() {\r\n    this.stream = null;\r\n  }\r\n  getPremissions() {\r\n    return new Promise((resolve, rej) => {\r\n      navigator.mediaDevices\r\n        .getUserMedia({ video: true, audio: true })\r\n        .then(stream => {\r\n          this.stream = stream;\r\n          resolve(stream);\r\n        })\r\n        .catch(err => {\r\n          throw new Error(\"Unable to fetch stream \" + err);\r\n        });\r\n    });\r\n  }\r\n  stopRecoring() {\r\n    this.stream.getTracks().forEach(function(track) {\r\n      track.stop();\r\n    });\r\n  }\r\n}\r\n","export const chatService = {\r\n  getChatRooms,\r\n  getMessagesForRoom,\r\n  sendMessage,\r\n  sendImage,\r\n  readMessages,\r\n  call,\r\n  answer\r\n};\r\n\r\nfunction logout() {\r\n  // remove user from local storage to log user out\r\n  localStorage.removeItem(\"user\");\r\n}\r\n\r\nfunction getChatRooms() {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    }\r\n  };\r\n\r\n  return fetch(\"/api/chat/getChatRooms/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction readMessages(params) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({\r\n      ...params\r\n    })\r\n  };\r\n\r\n  return fetch(\"/api/chat/readMessages/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction getMessagesForRoom(room) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({\r\n      ...room\r\n    })\r\n  };\r\n\r\n  return fetch(\"/api/chat/getMessagesForRoom/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction sendMessage(params) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({\r\n      ...params\r\n    })\r\n  };\r\n\r\n  return fetch(\"/api/chat/sendMessage/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction sendImage(data) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: data\r\n  };\r\n\r\n  return fetch(\"/api/chat/sendImage/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction call(data) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({\r\n      ...data\r\n    })\r\n  };\r\n\r\n  return fetch(\"/api/chat/call/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction answer(data) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({\r\n      ...data\r\n    })\r\n  };\r\n\r\n  return fetch(\"/api/chat/answer/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then(text => {\r\n    const data = text && JSON.parse(text);\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        // auto logout if 401 response returned from api\r\n        logout();\r\n        window.location.reload(true);\r\n      }\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n","import { chatConstants } from \"../_constants/chatConstants\";\r\nimport { chatService } from \"../_services/chatService\";\r\n\r\nexport const chatActions = {\r\n  typing,\r\n  stoppedTyping,\r\n  changeRoom,\r\n  getChatRooms,\r\n  getMessagesForRoom,\r\n  sendMessage,\r\n  sendImage,\r\n  newMessage,\r\n  readMessages,\r\n  changeActivityStatus,\r\n  imageMessageRequest,\r\n  call,\r\n  answer,\r\n  endCall,\r\n  endAnsweringCall,\r\n  searchUsers\r\n};\r\n\r\nfunction typing(roomId) {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.TYPING, roomId });\r\n  };\r\n}\r\n\r\nfunction stoppedTyping(roomId) {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.STOPPED_TYPING, roomId });\r\n  };\r\n}\r\n\r\nfunction initiateMessageArray(roomId) {\r\n  return { type: chatConstants.INIT_MESSAGE_ARRAY, roomId };\r\n}\r\n\r\nfunction changeRoom(room) {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.CHANGE_ROOM, room });\r\n  };\r\n}\r\n\r\nfunction readMessages(params) {\r\n  const { messageIds, roomId } = params;\r\n  return dispatch => {\r\n    dispatch(read(messageIds, roomId));\r\n    chatService.readMessages(params).then(\r\n      () => {},\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function read(messageIds, roomId) {\r\n    return { type: chatConstants.READ_MESSAGES, messageIds, roomId };\r\n  }\r\n}\r\n\r\nfunction getChatRooms() {\r\n  return dispatch => {\r\n    dispatch(request());\r\n\r\n    chatService.getChatRooms().then(\r\n      response => {\r\n        dispatch(success(response.rooms));\r\n\r\n        response.rooms.forEach(room =>\r\n          dispatch(initiateMessageArray(room._id))\r\n        );\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function request() {\r\n    return { type: chatConstants.GET_ROOMS_REQUEST };\r\n  }\r\n  function success(rooms) {\r\n    return { type: chatConstants.GET_ROOMS_SUCCESS, rooms };\r\n  }\r\n}\r\n\r\nfunction changeActivityStatus(user) {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.CHANGE_ACTIVITY_STATUS, user });\r\n  };\r\n}\r\n\r\nfunction getMessagesForRoom(room) {\r\n  return dispatch => {\r\n    if (room.initialFetch) {\r\n      dispatch(initialRequest(room._id));\r\n    } else {\r\n      dispatch(request(room._id));\r\n    }\r\n    chatService.getMessagesForRoom(room).then(\r\n      response => {\r\n        dispatch(\r\n          success({ messages: response.messages.reverse(), roomId: room._id })\r\n        );\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function request(roomId) {\r\n    return { type: chatConstants.GET_MESSAGES_REQUEST, roomId };\r\n  }\r\n  function initialRequest(roomId) {\r\n    return { type: chatConstants.GET_MESSAGES_INITIAL_REQUEST, roomId };\r\n  }\r\n  function success(data) {\r\n    return { type: chatConstants.GET_MESSAGES_SUCCESS, data };\r\n  }\r\n}\r\n\r\nfunction sendMessage(message) {\r\n  return dispatch => {\r\n    dispatch(request({ ...message, sent: false }));\r\n\r\n    chatService.sendMessage(message).then(\r\n      response => {\r\n        dispatch(success(response.message));\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function request(message) {\r\n    return { type: chatConstants.SEND_MESSAGE_REQUEST, message };\r\n  }\r\n  function success(message) {\r\n    return { type: chatConstants.SEND_MESSAGE_SUCCESS, message };\r\n  }\r\n}\r\n\r\nfunction sendImage(data, message) {\r\n  return dispatch => {\r\n    dispatch(request({ ...message, sent: false }));\r\n\r\n    chatService.sendImage(data).then(\r\n      response => {\r\n        dispatch(success(response.message));\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function request(message) {\r\n    return { type: chatConstants.SEND_MESSAGE_REQUEST, message };\r\n  }\r\n  function success(message) {\r\n    return { type: chatConstants.SEND_MESSAGE_SUCCESS, message };\r\n  }\r\n}\r\n\r\nfunction newMessage(message) {\r\n  return dispatch => {\r\n    dispatch(success(message));\r\n    dispatch({ type: chatConstants.INC_MESSAGE_COUNT });\r\n  };\r\n  function success(message) {\r\n    return { type: chatConstants.NEW_MESSAGE, message };\r\n  }\r\n}\r\n\r\nfunction imageMessageRequest(message) {\r\n  return dispatch => {\r\n    dispatch(success(message));\r\n  };\r\n  function success(message) {\r\n    return { type: chatConstants.NEW_IMAGE_MESSAGE_REQUEST, message };\r\n  }\r\n}\r\n\r\nfunction call(data) {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.OPEN_CALLING_MODAL });\r\n\r\n    chatService.call(data).then(\r\n      () => {},\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nfunction answer(data) {\r\n  return dispatch => {\r\n    chatService.answer(data).then(\r\n      () => {},\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nfunction endCall() {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.CLOSE_CALLING_MODAL });\r\n  };\r\n}\r\n\r\nfunction endAnsweringCall() {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.CLOSE_ANSWERING_MODAL });\r\n  };\r\n}\r\n\r\nfunction searchUsers(rooms) {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.SEARCH_USERS, rooms });\r\n  };\r\n}\r\n","export const userService = {\r\n  login,\r\n  logout,\r\n  sendVerificationEmail,\r\n  sendforgotPasswordEmail,\r\n  register,\r\n  getUserData,\r\n  resetPassword,\r\n  updateUser,\r\n  followUser,\r\n  getUserProfileData,\r\n  getPosts,\r\n  getUserProfileFollowers,\r\n  getUserProfileFollowings,\r\n  getNewUsers,\r\n};\r\n\r\nfunction login(email, password) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email, password }),\r\n  };\r\n\r\n  return fetch(\"/api/user/login\", requestOptions)\r\n    .then(handleResponse)\r\n    .then((res) => {\r\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n      localStorage.setItem(\"user\", JSON.stringify({ token: res.user.token }));\r\n      return res.user;\r\n    });\r\n}\r\n\r\nfunction getNewUsers(params) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ ...params }),\r\n  };\r\n\r\n  return fetch(\"/api/user/getNewUsers\", requestOptions)\r\n    .then(handleResponse)\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction resetPassword(data) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + data.jwt,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ ...data }),\r\n  };\r\n\r\n  return fetch(\"/api/user/passwordreset\", requestOptions)\r\n    .then(handlePasswordResetResponse)\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction sendVerificationEmail(email) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email }),\r\n  };\r\n  return fetch(\"/api/user/sendVerificationEmail/\", requestOptions).then(\r\n    handleResponse\r\n  );\r\n}\r\n\r\nfunction sendforgotPasswordEmail(email) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email }),\r\n  };\r\n  return fetch(\"/api/user/sendforgotPasswordEmail/\", requestOptions).then(\r\n    handleResponse\r\n  );\r\n}\r\n\r\nfunction logout() {\r\n  localStorage.removeItem(\"user\");\r\n}\r\n\r\nfunction register(user) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(user),\r\n  };\r\n  return fetch(\"/api/user/signup/\", requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getUserData(queryParams) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ ...queryParams }),\r\n  };\r\n  return fetch(\"/api/user/getUserData\", requestOptions)\r\n    .then(handleResponse)\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction getPosts(queryParams) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ ...queryParams }),\r\n  };\r\n  return fetch(\"/api/user/getPosts\", requestOptions)\r\n    .then(handleResponse)\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction updateUser(user) {\r\n  delete user.isDisabled;\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(user),\r\n  };\r\n\r\n  return fetch(\"/api/user/updateUser\", requestOptions)\r\n    .then(handleResponse)\r\n    .then((user) => {\r\n      localStorage.setItem(\"user\", JSON.stringify({ token: user.token }));\r\n      //localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n      return user;\r\n    });\r\n}\r\n\r\nfunction followUser(userId) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ userId }),\r\n  };\r\n\r\n  return fetch(\"/api/user/followUser\", requestOptions)\r\n    .then(handleResponse)\r\n    .then((user) => {\r\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n      //localStorage.setItem(\"user\", JSON.stringify(user));\r\n\r\n      return user;\r\n    });\r\n}\r\n\r\nfunction getUserProfileData(username) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ username: username.trim(), profilePage: true }),\r\n  };\r\n\r\n  return fetch(\"/api/user/getProfilePageData\", requestOptions)\r\n    .then(handleResponse)\r\n    .then((user) => {\r\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n      //localStorage.setItem(\"user\", JSON.stringify(user));\r\n      return user;\r\n    });\r\n}\r\n\r\nfunction getUserProfileFollowers(userId) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ userId }),\r\n  };\r\n  return fetch(\"/api/user/getUserProfileFollowers\", requestOptions)\r\n    .then(handleResponse)\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction getUserProfileFollowings(userId) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ userId }),\r\n  };\r\n  return fetch(\"/api/user/getUserProfileFollowings\", requestOptions)\r\n    .then(handleResponse)\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then((text) => {\r\n    const data = text && JSON.parse(text);\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        // auto logout if 401 response returned from api\r\n        logout();\r\n        window.location.reload(true);\r\n      }\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n\r\nfunction handlePasswordResetResponse(response) {\r\n  return response.text().then((text) => {\r\n    const data = text && JSON.parse(text);\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        // auto logout if 401 response returned from api\r\n      }\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n","import { userConstants } from \"../_constants/userConstants\";\r\nimport { postConstants } from \"../_constants/postConstants\";\r\nimport { userService } from \"../_services/userService\";\r\nimport { alertActions } from \"./alertActions\";\r\nimport { history } from \"../_helpers/history\";\r\n\r\nexport const userActions = {\r\n  login,\r\n  logout,\r\n  register,\r\n  sendVerificationEmail,\r\n  getUserData,\r\n  getUserProfileFollowers,\r\n  getUserProfileFollowings,\r\n  getFollowers,\r\n  getPosts,\r\n  getUserPosts,\r\n  getFollowings,\r\n  updateUserData,\r\n  followUser,\r\n  sendforgotPasswordEmail,\r\n  getUserProfileData,\r\n  getNewUsers,\r\n  resetPassword,\r\n};\r\n\r\nfunction logout() {\r\n  userService.logout();\r\n  return (dispatch) => {\r\n    dispatch({ type: userConstants.LOGOUT });\r\n  };\r\n}\r\n\r\nfunction resetPassword(data) {\r\n  return (dispatch) => {\r\n    dispatch(request());\r\n    userService.resetPassword(data).then(\r\n      (res) => {\r\n        dispatch(alertActions.success(res.message));\r\n        dispatch(response());\r\n      },\r\n      (error) => {\r\n        dispatch(alertActions.error(error));\r\n        dispatch(response());\r\n      }\r\n    );\r\n  };\r\n\r\n  function response() {\r\n    return { type: userConstants.PASSWORD_RESET_RESPONSE };\r\n  }\r\n  function request() {\r\n    return { type: userConstants.PASSWORD_RESET_REQUEST };\r\n  }\r\n}\r\n\r\nfunction getNewUsers(params) {\r\n  return (dispatch) => {\r\n    if (!params.initialFetch) {\r\n      dispatch(request());\r\n    }\r\n    userService.getNewUsers(params).then(\r\n      (res) => {\r\n        dispatch(success({ ...res, ...params }));\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  function success(data) {\r\n    return { type: userConstants.GET_NEW_USERS_SUCCESS, data };\r\n  }\r\n  function request() {\r\n    return { type: userConstants.GET_NEW_USERS_REQUEST };\r\n  }\r\n}\r\n\r\nfunction sendVerificationEmail(email) {\r\n  return (dispatch) => {\r\n    userService.sendVerificationEmail(email).then(\r\n      (res) => {\r\n        dispatch(alertActions.success(res.message));\r\n      },\r\n      (error) => {\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nfunction sendforgotPasswordEmail(email) {\r\n  return (dispatch) => {\r\n    userService.sendforgotPasswordEmail(email).then(\r\n      (res) => {\r\n        dispatch(alertActions.success(res.message));\r\n      },\r\n      (error) => {\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nfunction login(email, password) {\r\n  return (dispatch) => {\r\n    dispatch(request({ email }));\r\n\r\n    userService.login(email, password).then(\r\n      (user) => {\r\n        dispatch(success(user.token));\r\n        dispatch({ type: userConstants.GETUSER_SUCCESS, user });\r\n        history.push(\"/\");\r\n      },\r\n      (error) => {\r\n        dispatch(failure(error.toString()));\r\n        dispatch(alertActions.error(error.toString()));\r\n      }\r\n    );\r\n  };\r\n\r\n  function request(user) {\r\n    return { type: userConstants.LOGIN_REQUEST, user };\r\n  }\r\n  function success(user) {\r\n    return { type: userConstants.LOGIN_SUCCESS, user };\r\n  }\r\n  function failure(error) {\r\n    return { type: userConstants.LOGIN_FAILURE, error };\r\n  }\r\n}\r\n\r\nfunction register(user) {\r\n  return (dispatch) => {\r\n    dispatch(request(user));\r\n\r\n    userService.register(user).then(\r\n      (data) => {\r\n        dispatch(success());\r\n        history.push(\"/login\");\r\n        dispatch(alertActions.success(data.message));\r\n      },\r\n      (error) => {\r\n        dispatch(failure(error.toString()));\r\n        dispatch(alertActions.error(error.toString()));\r\n      }\r\n    );\r\n  };\r\n\r\n  function request(user) {\r\n    return { type: userConstants.REGISTER_REQUEST, user };\r\n  }\r\n  function success(user) {\r\n    return { type: userConstants.REGISTER_SUCCESS, user };\r\n  }\r\n  function failure(error) {\r\n    return { type: userConstants.REGISTER_FAILURE, error };\r\n  }\r\n}\r\n\r\nfunction getUserData(queryParams) {\r\n  return (dispatch) => {\r\n    dispatch(request());\r\n\r\n    userService.getUserData(queryParams).then(\r\n      (res) => {\r\n        res.user.posts &&\r\n          res.user.posts.forEach((post) =>\r\n            dispatch({ type: postConstants.INIT_COMMENT, postId: post._id })\r\n          );\r\n        dispatch(success(res.user));\r\n      },\r\n      (error) => {\r\n        dispatch(failure(error.toString()));\r\n        dispatch(alertActions.error(error.toString()));\r\n      }\r\n    );\r\n  };\r\n\r\n  function request() {\r\n    return { type: userConstants.GETUSER_REQUEST };\r\n  }\r\n  function success(user) {\r\n    return { type: userConstants.GETUSER_SUCCESS, user };\r\n  }\r\n  function failure(error) {\r\n    return { type: userConstants.GETUSER_FAILURE, error };\r\n  }\r\n}\r\n\r\nfunction getPosts(queryParams) {\r\n  return (dispatch) => {\r\n    userService.getPosts(queryParams).then(\r\n      (res) => {\r\n        res.posts.forEach((post) =>\r\n          dispatch({ type: postConstants.INIT_COMMENT, postId: post._id })\r\n        );\r\n        dispatch(success(res.posts));\r\n      },\r\n      (error) => {\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  function success(posts) {\r\n    return { type: userConstants.GET_POSTS, posts };\r\n  }\r\n}\r\n\r\nfunction getUserPosts(queryParams) {\r\n  return (dispatch) => {\r\n    userService.getPosts(queryParams).then(\r\n      (res) => {\r\n        res.posts.forEach((post) =>\r\n          dispatch({ type: postConstants.INIT_COMMENT, postId: post._id })\r\n        );\r\n        dispatch(success(res.posts));\r\n      },\r\n      (error) => {\r\n        dispatch(alertActions.error(error));\r\n      }\r\n    );\r\n  };\r\n\r\n  function success(posts) {\r\n    return { type: userConstants.GET_USER_PROFILE_POSTS, posts };\r\n  }\r\n}\r\n\r\nfunction updateUserData(user) {\r\n  return (dispatch) => {\r\n    dispatch(request());\r\n\r\n    userService.updateUser(user).then(\r\n      (data) => {\r\n        dispatch(success(data.user));\r\n      },\r\n      (error) => {\r\n        dispatch(failure(error.toString()));\r\n        //dispatch(alertActions.error(error.toString()));\r\n      }\r\n    );\r\n  };\r\n\r\n  function request() {\r\n    return { type: userConstants.USER_UPDATE_REQUEST };\r\n  }\r\n  function success(user) {\r\n    return { type: userConstants.USER_UPDATE_SUCCESS, user };\r\n  }\r\n  function failure(error) {\r\n    return { type: userConstants.USER_UPDATE_FAILURE, error };\r\n  }\r\n}\r\n\r\nfunction followUser(user) {\r\n  return (dispatch) => {\r\n    userService.followUser(user).then(\r\n      (user) => {\r\n        if (user.action === \"followed\") {\r\n          dispatch({ type: userConstants.FOLLOW_USER, user });\r\n        } else {\r\n          dispatch({ type: userConstants.UNFOLLOW_USER, user });\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nfunction getUserProfileData(username) {\r\n  return (dispatch) => {\r\n    dispatch(request());\r\n    userService.getUserProfileData(username).then(\r\n      (response) => {\r\n        // if logged in user requested its profile\r\n\r\n        if (response.user.loggedInUser) {\r\n          return history.push(\"/profile\");\r\n        }\r\n        document.title = \"@\" + response.user.username + \" | social-network\";\r\n        dispatch(success(response));\r\n        response.user.posts &&\r\n          response.user.posts.forEach((post) =>\r\n            dispatch({ type: postConstants.INIT_COMMENT, postId: post._id })\r\n          );\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        dispatch(failure());\r\n        dispatch(alertActions.error(error.toString()));\r\n      }\r\n    );\r\n  };\r\n  function request() {\r\n    return { type: userConstants.GET_USERPROFILE_DATA_REQUEST };\r\n  }\r\n  function success(user) {\r\n    return { type: userConstants.GET_USERPROFILE_DATA, user };\r\n  }\r\n  function failure() {\r\n    return { type: userConstants.GET_USERPROFILE_DATA_FAILURE };\r\n  }\r\n}\r\n\r\nfunction getUserProfileFollowings(userId) {\r\n  return (dispatch) => {\r\n    userService.getUserProfileFollowings(userId).then(\r\n      (response) => {\r\n        dispatch(success(response.users[0].following));\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  function success(users) {\r\n    return { type: userConstants.GET_USER_PROFILE_FOLLOWINGS, users };\r\n  }\r\n}\r\n\r\nfunction getUserProfileFollowers(userId) {\r\n  return (dispatch) => {\r\n    userService.getUserProfileFollowers(userId).then(\r\n      (response) => {\r\n        dispatch(success(response.users[0].followers));\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  function success(users) {\r\n    return { type: userConstants.GET_USER_PROFILE_FOLLOWERS, users };\r\n  }\r\n}\r\n\r\nfunction getFollowings(userId) {\r\n  return (dispatch) => {\r\n    userService.getUserProfileFollowings(userId).then(\r\n      (response) => {\r\n        dispatch(success(response.users[0].following));\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  function success(users) {\r\n    return { type: userConstants.GET_USER_FOLLOWINGS, users };\r\n  }\r\n}\r\n\r\nfunction getFollowers(userId) {\r\n  return (dispatch) => {\r\n    userService.getUserProfileFollowers(userId).then(\r\n      (response) => {\r\n        dispatch(success(response.users[0].followers));\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  function success(users) {\r\n    return { type: userConstants.GET_USER_FOLLOWERS, users };\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { history } from \"../_helpers/history\";\r\nimport { throttle } from \"throttle-debounce\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction searchUser(q) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ q })\r\n  };\r\n\r\n  return fetch(\"/api/user/searchByUsername\", requestOptions).then(res => {\r\n    return res;\r\n  });\r\n}\r\n\r\nfunction getSuggestionValue({ username }) {\r\n  return username;\r\n}\r\n\r\nfunction renderSuggestion({ firstName, lastName, username, profilePicture }) {\r\n  return (\r\n    <Link to={\"/\" + username}>\r\n      <span className={\"suggestion-content \" + username}>\r\n        <img alt=\"\" src={\"/images/profile-picture/100x100/\" + profilePicture} />\r\n        <span className=\"autosuggestion-name\">\r\n          {username}\r\n          <p>{`${firstName} ${lastName}`}</p>\r\n        </span>\r\n      </span>\r\n    </Link>\r\n  );\r\n}\r\n\r\nfunction renderSuggestionForTags({\r\n  firstName,\r\n  lastName,\r\n  username,\r\n  profilePicture\r\n}) {\r\n  return (\r\n    <span className={\"suggestion-content \" + username}>\r\n      <img alt=\"\" src={\"/images/profile-picture/100x100/\" + profilePicture} />\r\n      <span className=\"autosuggestion-name\">\r\n        {username}\r\n        <p>{`${firstName} ${lastName}`}</p>\r\n      </span>\r\n    </span>\r\n  );\r\n}\r\n\r\nclass AutosuggestExample extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: \"\",\r\n      suggestions: [],\r\n      isLoading: false\r\n    };\r\n\r\n    this.debouncedLoadSuggestions = throttle(500, this.loadSuggestions);\r\n  }\r\n\r\n  loadSuggestions(value) {\r\n    const autosuggestInput = document.querySelector(\".react-autosuggest__input\")\r\n      .classList;\r\n    autosuggestInput.add(\"user-suggestion-loading\");\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n\r\n    searchUser(value).then(response => {\r\n      if (value === this.state.value) {\r\n        response.json().then(results => {\r\n          autosuggestInput.remove(\"user-suggestion-loading\");\r\n          this.setState({\r\n            isLoading: false,\r\n            suggestions: results.users.map(user => {\r\n              return {\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                username: user.username,\r\n                profilePicture: user.profilePicture\r\n              };\r\n            })\r\n          });\r\n        });\r\n      } else {\r\n        autosuggestInput.remove(\"user-suggestion-loading\");\r\n        // Ignore suggestions if input value changed\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onKeyDown = event => {\r\n    const { addTagPage } = this.props;\r\n    const { value } = this.state;\r\n\r\n    if (event.keyCode === 13 && !addTagPage && value !== \"\") {\r\n      history.push(`/${value}`);\r\n    } else if (event.keyCode === 13 && addTagPage) {\r\n      this.props.addAutocompleteTag(value);\r\n    }\r\n  };\r\n\r\n  onChange = (event, { newValue }) => {\r\n    const { addTagPage } = this.props;\r\n    if (addTagPage) {\r\n      this.props.handleChange(newValue);\r\n    }\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.debouncedLoadSuggestions(value);\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n    const { addTagPage, submitOnClick } = this.props;\r\n    const inputProps = {\r\n      placeholder: \"Search\",\r\n      value: submitOnClick ? \"\" : value, // when adding image tags\r\n      onChange: this.onChange,\r\n      onKeyDown: this.onKeyDown\r\n    };\r\n\r\n    return (\r\n      <Autosuggest\r\n        onKeyDown={this.handleOnKeyDown}\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={\r\n          addTagPage ? renderSuggestionForTags : renderSuggestion\r\n        }\r\n        inputProps={inputProps}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst connectedAutosuggestExample = connect(null)(AutosuggestExample);\r\nexport { connectedAutosuggestExample as AutosuggestExample };\r\n","import io from \"socket.io-client\";\r\n\r\nexport const socketService = {\r\n  connect,\r\n};\r\n//window.location.hostname\r\nfunction connect() {\r\n  return new Promise((resolve, reject) => {\r\n    const socket = io(window.location.hostname + \":3000\", {\r\n      query: { token: JSON.parse(localStorage.getItem(\"user\")).token },\r\n    });\r\n    socket.on(\"connect\", () => {\r\n      resolve(socket);\r\n    });\r\n  });\r\n}\r\n","import { socketConstants } from \"../_constants/socketConstants\";\r\nimport { userConstants } from \"../_constants/userConstants\";\r\nimport { chatConstants } from \"../_constants/chatConstants\";\r\nimport { socketService } from \"../_services/socketService\";\r\nimport { notificationActions } from \"../actions/notificationActions\";\r\nimport { chatActions } from \"../actions/chatActions\";\r\n\r\nexport const socketActions = {\r\n  connect\r\n};\r\n\r\nfunction connect() {\r\n  return dispatch => {\r\n    socketService.connect().then(socket => {\r\n      dispatch(connectSocket(socket));\r\n      socket.on(\"newNotification\", data => {\r\n        dispatch(notificationActions.addNotification(data));\r\n      });\r\n\r\n      socket.on(\"newMessage\", data => {\r\n        dispatch(chatActions.newMessage(data));\r\n      });\r\n\r\n      socket.on(\"readMessages\", data => {\r\n        dispatch({ type: chatConstants.RECEIVE_READ_MESSAGES, data });\r\n      });\r\n\r\n      socket.on(\"newUser\", data => {\r\n        dispatch({ type: userConstants.NEW_USER, user: data });\r\n      });\r\n\r\n      socket.on(\"imageMessageRequest\", data => {\r\n        function request(message) {\r\n          return { type: chatConstants.SEND_MESSAGE_REQUEST, message };\r\n        }\r\n        dispatch(request({ ...data, sent: false }));\r\n      });\r\n\r\n      socket.on(\"imageMessage\", data => {\r\n        function success(message) {\r\n          return { type: chatConstants.SEND_MESSAGE_SUCCESS, message };\r\n        }\r\n        dispatch({ type: chatConstants.INC_MESSAGE_COUNT });\r\n        dispatch(success({ ...data }));\r\n      });\r\n\r\n      socket.on(\"newRoom\", data => {\r\n        dispatch({ type: chatConstants.INIT_MESSAGE_ARRAY, roomId: data._id });\r\n        dispatch({ type: chatConstants.ADD_NEW_ROOM, room: data });\r\n      });\r\n\r\n      socket.on(\"typing\", data => {\r\n        dispatch(chatActions.typing(data.roomId));\r\n      });\r\n\r\n      socket.on(\"stoppedTyping\", data => {\r\n        dispatch(chatActions.stoppedTyping(data.roomId));\r\n      });\r\n\r\n      socket.on(\"activityStatusUpdate\", data => {\r\n        dispatch(chatActions.changeActivityStatus(data));\r\n      });\r\n      socket.on(\"newCall\", data => {\r\n        dispatch({ type: chatConstants.OPEN_ANSWERING_MODAL, data });\r\n      });\r\n    });\r\n  };\r\n  function connectSocket(socket) {\r\n    return { type: socketConstants.CONNECT, socket };\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Popup,\r\n  Grid,\r\n  Card,\r\n  Feed,\r\n  Image,\r\n  Divider,\r\n  Header\r\n} from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { notificationActions } from \"../actions/notificationActions\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\ndayjs.extend(relativeTime);\r\n\r\nfunction postLikeNotification({ _id, createdAt, sender, post }) {\r\n  return (\r\n    <Feed.Event key={_id}>\r\n      <Feed.Label\r\n        image={`/images/profile-picture/100x100/${sender[0].profilePicture}`}\r\n      />\r\n      <Feed.Content>\r\n        <Feed.Summary>\r\n          <Feed.User as={Link} to={\"/\" + sender[0].username}>\r\n            {sender[0].username}\r\n          </Feed.User>{\" \"}\r\n          <span style={{ fontWeight: \"normal\" }}>liked your</span>{\" \"}\r\n          <Link to={`/p/${post[0]._id}`}>post</Link>\r\n          <Feed.Date>{dayjs(createdAt).fromNow()}</Feed.Date>\r\n        </Feed.Summary>\r\n        <Feed.Extra images>\r\n          <Link to={`/p/${post[0]._id}`}>\r\n            <Image\r\n              rounded\r\n              src={`/images/post-images/thumbnail/${post[0].photo}`}\r\n            />\r\n          </Link>\r\n        </Feed.Extra>\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n  );\r\n}\r\n\r\nfunction commentLikeNotification({ _id, createdAt, sender, comment, post }) {\r\n  return (\r\n    <Feed.Event key={_id}>\r\n      <Feed.Label\r\n        image={`/images/profile-picture/100x100/${sender[0].profilePicture}`}\r\n      />\r\n      <Feed.Content>\r\n        <Feed.Summary>\r\n          <Feed.User as={Link} to={\"/\" + sender[0].username}>\r\n            {sender[0].username}\r\n          </Feed.User>{\" \"}\r\n          <span style={{ fontWeight: \"normal\" }}>liked your comment</span>{\" \"}\r\n          {comment[0].text} <span style={{ fontWeight: \"normal\" }}>on</span>{\" \"}\r\n          <Link to={`/p/${post[0]._id}`}>post</Link>\r\n          <Feed.Date>{dayjs(createdAt).fromNow()}</Feed.Date>\r\n        </Feed.Summary>\r\n        <Feed.Extra images>\r\n          <Link to={`/p/${post[0]._id}`}>\r\n            <Image\r\n              rounded\r\n              src={`/images/post-images/thumbnail/${post[0].photo}`}\r\n            />\r\n          </Link>\r\n        </Feed.Extra>\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n  );\r\n}\r\n\r\nfunction likeCommentReplyNotification({ _id, createdAt, sender, reply, post }) {\r\n  return (\r\n    <Feed.Event key={_id}>\r\n      <Feed.Label\r\n        image={`/images/profile-picture/100x100/${sender[0].profilePicture}`}\r\n      />\r\n      <Feed.Content>\r\n        <Feed.Summary>\r\n          <Feed.User as={Link} to={\"/\" + sender[0].username}>\r\n            {sender[0].username}\r\n          </Feed.User>{\" \"}\r\n          <span style={{ fontWeight: \"normal\" }}>liked your reply</span>{\" \"}\r\n          {reply[0].text} <span style={{ fontWeight: \"normal\" }}>on</span>{\" \"}\r\n          <Link to={`/p/${post[0]._id}`}>post</Link>\r\n          <Feed.Date>{dayjs(createdAt).fromNow()}</Feed.Date>\r\n        </Feed.Summary>\r\n        <Feed.Extra images>\r\n          <Link to={`/p/${post[0]._id}`}>\r\n            <Image\r\n              rounded\r\n              src={`/images/post-images/thumbnail/${post[0].photo}`}\r\n            />\r\n          </Link>\r\n        </Feed.Extra>\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n  );\r\n}\r\n\r\nfunction postTaggedNotification({ _id, createdAt, sender, post }) {\r\n  return (\r\n    <Feed.Event key={_id}>\r\n      <Feed.Label\r\n        image={`/images/profile-picture/100x100/${sender[0].profilePicture}`}\r\n      />\r\n      <Feed.Content>\r\n        <Feed.Summary>\r\n          <Feed.User as={Link} to={\"/\" + sender[0].username}>\r\n            {sender[0].username}\r\n          </Feed.User>{\" \"}\r\n          <span style={{ fontWeight: \"normal\" }}> tagged you on</span>{\" \"}\r\n          <Link to={`/p/${post[0]._id}`}>post</Link>\r\n          <Feed.Date>{dayjs(createdAt).fromNow()}</Feed.Date>\r\n        </Feed.Summary>\r\n        <Feed.Extra images>\r\n          <Link to={`/p/${post[0]._id}`}>\r\n            <Image\r\n              rounded\r\n              src={`/images/post-images/thumbnail/${post[0].photo}`}\r\n            />\r\n          </Link>\r\n        </Feed.Extra>\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n  );\r\n}\r\n\r\nfunction commentTaggedNotification({ _id, createdAt, sender, post }) {\r\n  return (\r\n    <Feed.Event key={_id}>\r\n      <Feed.Label\r\n        image={`/images/profile-picture/100x100/${sender[0].profilePicture}`}\r\n      />\r\n      <Feed.Content>\r\n        <Feed.Summary>\r\n          <Feed.User as={Link} to={\"/\" + sender[0].username}>\r\n            {sender[0].username}\r\n          </Feed.User>{\" \"}\r\n          <span style={{ fontWeight: \"normal\" }}>mentioned you on</span>{\" \"}\r\n          <Link to={`/p/${post[0]._id}`}>post</Link>\r\n          <Feed.Date>{dayjs(createdAt).fromNow()}</Feed.Date>\r\n        </Feed.Summary>\r\n        <Feed.Extra images>\r\n          <Link to={`/p/${post[0]._id}`}>\r\n            <Image\r\n              rounded\r\n              src={`/images/post-images/thumbnail/${post[0].photo}`}\r\n            />\r\n          </Link>\r\n        </Feed.Extra>\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n  );\r\n}\r\n\r\nfunction addCommentNotification({ _id, createdAt, sender, comment, post }) {\r\n  return (\r\n    <Feed.Event key={_id}>\r\n      <Feed.Label\r\n        image={`/images/profile-picture/100x100/${sender[0].profilePicture}`}\r\n      />\r\n      <Feed.Content>\r\n        <Feed.Summary>\r\n          <Feed.User as={Link} to={\"/\" + sender[0].username}>\r\n            {sender[0].username}\r\n          </Feed.User>{\" \"}\r\n          <span style={{ fontWeight: \"normal\" }}>commented</span>{\" \"}\r\n          {comment[0].text} <span style={{ fontWeight: \"normal\" }}>on</span>{\" \"}\r\n          <Link to={`/p/${post[0]._id}`}>post</Link>\r\n          <Feed.Date>{dayjs(createdAt).fromNow()}</Feed.Date>\r\n        </Feed.Summary>\r\n        <Feed.Extra images>\r\n          <Link to={`/p/${post[0]._id}`}>\r\n            <Image\r\n              rounded\r\n              src={`/images/post-images/thumbnail/${post[0].photo}`}\r\n            />\r\n          </Link>\r\n        </Feed.Extra>\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n  );\r\n}\r\n\r\nfunction followNotification({ _id, createdAt, sender }) {\r\n  return (\r\n    <Feed.Event key={_id}>\r\n      <Feed.Label\r\n        image={`/images/profile-picture/100x100/${sender[0].profilePicture}`}\r\n      />\r\n      <Feed.Content>\r\n        <Feed.Summary>\r\n          <Feed.User as={Link} to={\"/\" + sender[0].username}>\r\n            {sender[0].username}\r\n          </Feed.User>{\" \"}\r\n          <span style={{ fontWeight: \"normal\" }}>followed you</span>\r\n          <Feed.Date>{dayjs(createdAt).fromNow()}</Feed.Date>\r\n        </Feed.Summary>\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n  );\r\n}\r\n\r\nfunction commentReplyNotification({\r\n  _id,\r\n  createdAt,\r\n  post,\r\n  sender,\r\n  reply,\r\n  comment\r\n}) {\r\n  return (\r\n    <Feed.Event key={_id}>\r\n      <Feed.Label\r\n        image={`/images/profile-picture/100x100/${sender[0].profilePicture}`}\r\n      />\r\n      <Feed.Content>\r\n        <Feed.Summary>\r\n          <Feed.User as={Link} to={\"/\" + sender[0].username}>\r\n            {sender[0].username}\r\n          </Feed.User>{\" \"}\r\n          <span style={{ fontWeight: \"normal\" }}>replied</span> {reply[0].text}{\" \"}\r\n          <span style={{ fontWeight: \"normal\" }}>to</span> {comment[0].text}\r\n          <span style={{ fontWeight: \"normal\" }}> on </span>\r\n          <Link to={`/p/${post[0]._id}`}>post</Link>\r\n          <Feed.Date>{dayjs(createdAt).fromNow()}</Feed.Date>\r\n        </Feed.Summary>\r\n        <Feed.Extra images>\r\n          <Link to={`/p/${post[0]._id}`}>\r\n            <Image\r\n              rounded\r\n              src={`/images/post-images/thumbnail/${post[0].photo}`}\r\n            />\r\n          </Link>\r\n        </Feed.Extra>\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n  );\r\n}\r\n\r\nconst NotificationPopup = ({\r\n  dispatch,\r\n  isOpen,\r\n  children,\r\n  notifications,\r\n  allNotificationsCount\r\n}) => {\r\n  const notificationsFeed = notifications.map(notification => {\r\n    if (notification.type === \"like_post\") {\r\n      return postLikeNotification(notification);\r\n    } else if (notification.type === \"follow\") {\r\n      return followNotification(notification);\r\n    } else if (notification.type === \"post_comment\") {\r\n      return addCommentNotification(notification);\r\n    } else if (notification.type === \"comment_reply\") {\r\n      return commentReplyNotification(notification);\r\n    } else if (notification.type === \"comment_tagged\") {\r\n      return commentTaggedNotification(notification);\r\n    } else if (notification.type === \"post_tagged\") {\r\n      return postTaggedNotification(notification);\r\n    } else if (notification.type === \"like_commentReply\") {\r\n      return likeCommentReplyNotification(notification);\r\n    } else {\r\n      return commentLikeNotification(notification);\r\n    }\r\n  });\r\n  const fetchData = () => {\r\n    const lastId = notifications[notifications.length - 1]._id;\r\n    dispatch(\r\n      notificationActions.fetchNotifications({ initialFetch: false, lastId })\r\n    );\r\n  };\r\n  return (\r\n    <Popup\r\n      trigger={children}\r\n      on=\"click\"\r\n      position=\"top center\"\r\n      style={{ border: \"none\" }}\r\n      open={isOpen}\r\n    >\r\n      <Grid centered divided columns=\"equal\">\r\n        <Card\r\n          id=\"scrollableDiv\"\r\n          style={{ overflow: \"auto\", maxHeight: \"300px\" }}\r\n        >\r\n          <Card.Content>\r\n            {\" \"}\r\n            <InfiniteScroll\r\n              dataLength={notificationsFeed.length} //This is important field to render the next data\r\n              next={fetchData}\r\n              scrollableTarget=\"scrollableDiv\"\r\n              hasMore={\r\n                allNotificationsCount === notifications.length ? false : true\r\n              }\r\n              loader={<h4>Loading...</h4>}\r\n              endMessage={\r\n                <Divider horizontal>\r\n                  <Header as=\"h5\">Yay! You have seen it all</Header>\r\n                </Divider>\r\n              }\r\n            >\r\n              <Feed>{notificationsFeed} </Feed>\r\n            </InfiniteScroll>\r\n          </Card.Content>\r\n        </Card>\r\n      </Grid>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isOpen: state.notification.isOpen,\r\n  notifications: state.notification.notifications,\r\n  allNotificationsCount: state.notification.allNotificationsCount\r\n});\r\n\r\nconst connectNotificationPopup = connect(mapStateToProps)(NotificationPopup);\r\nexport { connectNotificationPopup as NotificationPopup };\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Image, Modal, Button } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { chatActions } from \"../actions/chatActions\";\r\nimport Peer from \"simple-peer\";\r\nimport { MediaHandler } from \"../_helpers/MediaHandler\";\r\n\r\nclass AnsweringModal extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      hasMedia: false\r\n    };\r\n\r\n    this.stream = null;\r\n    this.mediaHandler = new MediaHandler();\r\n  }\r\n\r\n  handeAnswer = () => {\r\n    const { dispatch, answeringModal } = this.props;\r\n\r\n    this.mediaHandler.getPremissions().then(stream => {\r\n      this.setState({ hasMedia: true });\r\n      this.stream = stream;\r\n\r\n      this.peer = new Peer({ stream });\r\n\r\n      this.peer.on(\"error\", err => {\r\n        console.log(err);\r\n      });\r\n\r\n      this.peer.signal(answeringModal.webRtc);\r\n\r\n      this.peer.on(\"stream\", stream => {\r\n        this.userVideo.srcObject = stream;\r\n        this.userVideo.play();\r\n      });\r\n\r\n      this.peer.on(\"signal\", webRtc => {\r\n        dispatch(\r\n          chatActions.answer({ roomId: answeringModal.room._id, webRtc })\r\n        );\r\n      });\r\n\r\n      this.peer.on(\"close\", () => {\r\n        this.mediaHandler.stopRecoring();\r\n        dispatch(chatActions.endAnsweringCall());\r\n        this.setState({ hasMedia: false });\r\n      });\r\n\r\n      this.myVideo.srcObject = stream;\r\n      this.myVideo.play();\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    const { dispatch } = this.props;\r\n\r\n    this.peer.destroy();\r\n\r\n    this.mediaHandler.stopRecoring();\r\n    this.setState({ hasMedia: false });\r\n    dispatch(chatActions.endAnsweringCall());\r\n  };\r\n\r\n  render() {\r\n    const { answeringModal } = this.props;\r\n    const { hasMedia } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <Modal open={answeringModal.isOpen}>\r\n          <Modal.Content image>\r\n            {!hasMedia ? (\r\n              <Image\r\n                wrapped\r\n                size=\"medium\"\r\n                src={\r\n                  \"http://localhost:5000/images/profile-picture/\" +\r\n                  answeringModal.caller.profilePicture\r\n                }\r\n              />\r\n            ) : null}\r\n            <Modal.Description>\r\n              <video\r\n                style={{\r\n                  width: 300,\r\n                  height: \"auto\"\r\n                }}\r\n                ref={ref => {\r\n                  this.myVideo = ref;\r\n                }}\r\n              ></video>\r\n              <video\r\n                style={{\r\n                  width: 300,\r\n                  height: \"auto\"\r\n                }}\r\n                ref={ref => {\r\n                  this.userVideo = ref;\r\n                }}\r\n              ></video>\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button negative onClick={this.handleClose}>\r\n              Decline\r\n            </Button>\r\n            <Button onClick={this.handeAnswer} positive content=\"Answer\" />\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user,\r\n  notifications: state.notification.notifications,\r\n  answeringModal: state.chat.answeringModal,\r\n  currentRoom: state.chat.currentRoom,\r\n  roomId: state.chat.roomId\r\n});\r\n\r\nconst connectAnsweringModal = connect(mapStateToProps)(AnsweringModal);\r\nexport { connectAnsweringModal as AnsweringModal };\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Icon, Image, Dropdown, Label } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { history } from \"../_helpers/history\";\r\nimport { notificationActions } from \"../actions/notificationActions\";\r\nimport { socketActions } from \"../actions/socketActions\";\r\nimport { userActions } from \"../actions/userActions\";\r\nimport { NotificationPopup } from \"./NotificationPopup\";\r\nimport { AutosuggestExample } from \"../components/Autosuggestion\";\r\nimport { AnsweringModal } from \"../MessengerPage/AnsweringModal\";\r\n\r\nfunction trigger(image, name) {\r\n  return (\r\n    <span>\r\n      <Image\r\n        size=\"mini\"\r\n        avatar\r\n        src={\"/images/profile-picture/100x100/\" + image}\r\n      />{\" \"}\r\n      {name}\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction getUserDataF(path, cb) {\r\n  const params = {\r\n    profilePage: false,\r\n    userProfile: false,\r\n  };\r\n  if (path === \"/\") {\r\n    cb({ ...params });\r\n  } else if (path === \"/profile\") {\r\n    cb({ ...params, profilePage: true });\r\n  } else {\r\n    cb({ ...params, userProfile: true });\r\n  }\r\n}\r\n\r\nclass Navbar extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: \"\",\r\n      options: [\r\n        {\r\n          key: \"user\",\r\n          text: \"Account\",\r\n          icon: \"user\",\r\n          value: \"profile\",\r\n          active: false,\r\n        },\r\n        {\r\n          key: \"sign-out\",\r\n          text: \"Sign Out\",\r\n          icon: \"sign out\",\r\n          value: \"login\",\r\n          active: false,\r\n        },\r\n      ],\r\n      activePath: \"\",\r\n    };\r\n    this.params = {\r\n      homePage: false,\r\n      profilePage: false,\r\n      userProfile: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n\r\n    history.listen((location) => {\r\n      this.setState({ activePath: location.pathname });\r\n\r\n      getUserDataF(location.pathname, (data) =>\r\n        dispatch(userActions.getUserData(data))\r\n      );\r\n    });\r\n\r\n    getUserDataF(history.location.pathname, (data) =>\r\n      dispatch(userActions.getUserData(data))\r\n    );\r\n\r\n    this.setState({ activePath: history.location.pathname });\r\n    dispatch(socketActions.connect());\r\n  }\r\n\r\n  handleNotificationPopupToggle = (e) => {\r\n    e.stopPropagation();\r\n    const { dispatch, notifications } = this.props;\r\n    const ids = notifications.filter((e) => !e.read).map((e) => e._id);\r\n\r\n    dispatch(notificationActions.toggleNotificationPopup());\r\n\r\n    if (!notifications.length) {\r\n      dispatch(\r\n        notificationActions.fetchNotifications({ initialFetch: true }, ids)\r\n      );\r\n    } else {\r\n      const lastId = notifications[notifications.length - 1]._id;\r\n      dispatch(\r\n        notificationActions.fetchNotifications(\r\n          { initialFetch: false, lastId },\r\n          ids\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  handleChange = (e, { value }) => {\r\n    if (value === \"login\") {\r\n      localStorage.removeItem(\"user\");\r\n      window.location.reload(true);\r\n    }\r\n    history.push(\"/\" + value);\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const { user, answeringModal } = this.props;\r\n    const { value, options, activePath } = this.state;\r\n\r\n    if (user.loadingUser) {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <div className=\"main-navbar\">\r\n          <div className=\"nav-item logo\">\r\n            <Link to={\"/\"}>SOCIAL-NETWORK</Link>\r\n          </div>\r\n          <div className=\"nav-item search-bar\">\r\n            <AutosuggestExample />\r\n          </div>\r\n          <div className=\"nav-item nav-menu\">\r\n            <Menu borderless className=\"top-menu\">\r\n              <Menu.Menu className=\"nav-container\">\r\n                {/* 5 */}\r\n                <Menu.Menu position=\"right\">\r\n                  <Menu.Item active={activePath === \"/\"} as={Link} to=\"/\">\r\n                    <Icon name=\"home\" size=\"big\" />\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    active={activePath.includes(\"/messages/\")}\r\n                    as={Link}\r\n                    to=\"/messages/chat\"\r\n                  >\r\n                    <Icon name=\"facebook messenger\" size=\"big\" />\r\n                    {user.data.messagesCount !== 0 ? (\r\n                      <Label color=\"red\" style={{ margin: 0 }}>\r\n                        {user.data.messagesCount}\r\n                      </Label>\r\n                    ) : (\r\n                      <Label color=\"grey\" style={{ margin: 0 }}>\r\n                        0\r\n                      </Label>\r\n                    )}\r\n                  </Menu.Item>\r\n\r\n                  <NotificationPopup>\r\n                    <Menu.Item\r\n                      onClick={(e) => this.handleNotificationPopupToggle(e)}\r\n                    >\r\n                      <Icon name=\"bell\" size=\"big\" />\r\n                      {user.data.notificationsCount !== 0 ? (\r\n                        <Label color=\"red\" style={{ margin: 0 }}>\r\n                          {user.data.notificationsCount}\r\n                        </Label>\r\n                      ) : (\r\n                        <Label color=\"grey\" style={{ margin: 0 }}>\r\n                          0\r\n                        </Label>\r\n                      )}\r\n                    </Menu.Item>\r\n                  </NotificationPopup>\r\n\r\n                  {/* 7*/}\r\n                  <Menu.Item\r\n                    active={activePath === \"/profile\"}\r\n                    name=\"avatar\"\r\n                    id=\"avatar-container\"\r\n                  >\r\n                    <Dropdown\r\n                      trigger={trigger(user.data.profilePicture)}\r\n                      selectOnNavigation={false}\r\n                      options={options}\r\n                      icon={null}\r\n                      onClose={() => this.setState({ value: \"\" })}\r\n                      onChange={this.handleChange}\r\n                      value={value}\r\n                    />\r\n                  </Menu.Item>\r\n                  <Menu.Item\r\n                    id=\"icon-container\"\r\n                    active={activePath === \"/profile\"}\r\n                  >\r\n                    <Dropdown\r\n                      trigger={<Icon name=\"user\" size=\"big\" />}\r\n                      selectOnNavigation={false}\r\n                      options={options}\r\n                      icon={null}\r\n                      onClose={() => this.setState({ value: \"\" })}\r\n                      onChange={this.handleChange}\r\n                      value={value}\r\n                    />\r\n                  </Menu.Item>\r\n                </Menu.Menu>\r\n              </Menu.Menu>\r\n            </Menu>\r\n          </div>\r\n          {answeringModal.isOpen ? <AnsweringModal></AnsweringModal> : null}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  notifications: state.notification.notifications,\r\n  answeringModal: state.chat.answeringModal,\r\n  currentRoom: state.chat.currentRoom,\r\n  roomId: state.chat.roomId,\r\n});\r\n\r\nconst connectNavbar = connect(mapStateToProps)(Navbar);\r\nexport { connectNavbar as default };\r\n"],"names":["MediaHandler","constructor","this","stream","getPremissions","Promise","resolve","rej","navigator","mediaDevices","getUserMedia","video","audio","then","catch","err","Error","stopRecoring","getTracks","forEach","track","stop","chatService","getChatRooms","requestOptions","method","headers","Authorization","JSON","parse","localStorage","getItem","token","fetch","handleResponse","res","getMessagesForRoom","room","body","stringify","sendMessage","params","sendImage","data","readMessages","call","answer","response","text","ok","status","removeItem","window","location","reload","error","message","statusText","reject","chatActions","typing","roomId","dispatch","type","chatConstants","TYPING","stoppedTyping","STOPPED_TYPING","changeRoom","CHANGE_ROOM","GET_ROOMS_REQUEST","rooms","GET_ROOMS_SUCCESS","_id","INIT_MESSAGE_ARRAY","console","log","initialFetch","GET_MESSAGES_INITIAL_REQUEST","GET_MESSAGES_REQUEST","request","messages","reverse","GET_MESSAGES_SUCCESS","SEND_MESSAGE_REQUEST","sent","SEND_MESSAGE_SUCCESS","success","newMessage","NEW_MESSAGE","INC_MESSAGE_COUNT","messageIds","READ_MESSAGES","read","changeActivityStatus","user","CHANGE_ACTIVITY_STATUS","imageMessageRequest","NEW_IMAGE_MESSAGE_REQUEST","OPEN_CALLING_MODAL","endCall","CLOSE_CALLING_MODAL","endAnsweringCall","CLOSE_ANSWERING_MODAL","searchUsers","SEARCH_USERS","userService","login","email","password","setItem","logout","sendVerificationEmail","sendforgotPasswordEmail","register","getUserData","queryParams","resetPassword","jwt","handlePasswordResetResponse","updateUser","isDisabled","followUser","userId","getUserProfileData","username","trim","profilePage","getPosts","getUserProfileFollowers","getUserProfileFollowings","getNewUsers","userActions","userConstants","LOGIN_REQUEST","LOGIN_SUCCESS","GETUSER_SUCCESS","history","push","LOGIN_FAILURE","failure","toString","alertActions","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","GETUSER_REQUEST","posts","post","postConstants","INIT_COMMENT","postId","GETUSER_FAILURE","users","followers","GET_USER_PROFILE_FOLLOWERS","following","GET_USER_PROFILE_FOLLOWINGS","getFollowers","GET_USER_FOLLOWERS","GET_POSTS","getUserPosts","GET_USER_PROFILE_POSTS","getFollowings","GET_USER_FOLLOWINGS","updateUserData","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAILURE","action","FOLLOW_USER","UNFOLLOW_USER","GET_USERPROFILE_DATA_REQUEST","loggedInUser","document","title","GET_USERPROFILE_DATA","GET_USERPROFILE_DATA_FAILURE","GET_NEW_USERS_REQUEST","GET_NEW_USERS_SUCCESS","PASSWORD_RESET_REQUEST","PASSWORD_RESET_RESPONSE","getSuggestionValue","_ref","renderSuggestion","_ref2","firstName","lastName","profilePicture","_jsx","Link","to","children","_jsxs","className","alt","src","concat","renderSuggestionForTags","_ref3","AutosuggestExample","Component","super","onKeyDown","event","addTagPage","props","value","state","keyCode","addAutocompleteTag","onChange","_ref4","newValue","handleChange","setState","onSuggestionsFetchRequested","_ref5","debouncedLoadSuggestions","onSuggestionsClearRequested","suggestions","isLoading","throttle","loadSuggestions","autosuggestInput","querySelector","classList","add","q","searchUser","json","results","remove","map","render","submitOnClick","inputProps","placeholder","Autosuggest","handleOnKeyDown","connectedAutosuggestExample","connect","socketService","socket","io","hostname","query","on","socketActions","socketConstants","CONNECT","connectSocket","notificationActions","addNotification","RECEIVE_READ_MESSAGES","NEW_USER","ADD_NEW_ROOM","OPEN_ANSWERING_MODAL","dayjs","relativeTime","connectNotificationPopup","isOpen","notification","notifications","allNotificationsCount","_ref9","notificationsFeed","createdAt","sender","Feed","Event","Label","image","Content","Summary","User","as","style","fontWeight","Date","fromNow","Extra","images","Image","rounded","photo","postLikeNotification","_ref7","followNotification","_ref6","comment","addCommentNotification","_ref8","reply","commentReplyNotification","commentTaggedNotification","postTaggedNotification","likeCommentReplyNotification","commentLikeNotification","Popup","trigger","position","border","open","Grid","centered","divided","columns","Card","id","overflow","maxHeight","InfiniteScroll","dataLength","length","next","fetchData","lastId","fetchNotifications","scrollableTarget","hasMore","loader","endMessage","Divider","horizontal","Header","AnsweringModal","handeAnswer","answeringModal","mediaHandler","hasMedia","peer","Peer","signal","webRtc","userVideo","srcObject","play","myVideo","handleClose","destroy","Fragment","Modal","wrapped","size","caller","Description","width","height","ref","Actions","Button","negative","onClick","positive","content","connectAnsweringModal","chat","currentRoom","getUserDataF","path","cb","userProfile","Navbar","handleNotificationPopupToggle","e","stopPropagation","ids","filter","toggleNotificationPopup","options","key","icon","active","activePath","homePage","componentDidMount","listen","pathname","loadingUser","Menu","borderless","Item","Icon","name","includes","messagesCount","color","margin","NotificationPopup","notificationsCount","Dropdown","avatar","selectOnNavigation","onClose","connectNavbar"],"sourceRoot":""}