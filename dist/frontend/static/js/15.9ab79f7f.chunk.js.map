{"version":3,"sources":["_services/chatService.js","actions/chatActions.js","reusable/ReusableUtils.js","_helpers/MediaHandler.js","MessengerPage/MessengerSidePanel.js","MessengerPage/MessengerInput.js","MessengerPage/CallingModal.js","MessengerPage/Messages.js","MessengerPage/MessengerContent.js","MessengerPage/MessengerPage.js"],"names":["chatService","getChatRooms","requestOptions","method","headers","Content-Type","Authorization","JSON","parse","localStorage","getItem","token","fetch","then","handleResponse","res","getMessagesForRoom","room","body","stringify","Object","objectSpread","sendMessage","params","sendImage","data","readMessages","call","answer","response","text","ok","status","removeItem","window","location","reload","error","message","statusText","Promise","reject","chatActions","typing","roomId","dispatch","type","chatConstants","TYPING","stoppedTyping","STOPPED_TYPING","changeRoom","CHANGE_ROOM","GET_ROOMS_REQUEST","rooms","GET_ROOMS_SUCCESS","forEach","_id","INIT_MESSAGE_ARRAY","console","log","initialFetch","GET_MESSAGES_INITIAL_REQUEST","GET_MESSAGES_REQUEST","request","messages","reverse","GET_MESSAGES_SUCCESS","SEND_MESSAGE_REQUEST","sent","SEND_MESSAGE_SUCCESS","newMessage","NEW_MESSAGE","success","INC_MESSAGE_COUNT","messageIds","READ_MESSAGES","read","changeActivityStatus","user","CHANGE_ACTIVITY_STATUS","imageMessageRequest","NEW_IMAGE_MESSAGE_REQUEST","OPEN_CALLING_MODAL","endCall","CLOSE_CALLING_MODAL","endAnsweringCall","CLOSE_ANSWERING_MODAL","searchUsers","SEARCH_USERS","base64StringtoFile","base64String","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","extractImageFileExtensionFromBase64","base64Data","substring","indexOf","image64toCanvasRef","canvasRef","image64","pixelCrop","canvas","width","height","ctx","getContext","image","Image","src","onload","drawImage","x","y","__webpack_require__","d","__webpack_exports__","MediaHandler","C_Users_adm1_Documents_Semester5_Transactional_Application_2_Final_Project_social_network_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","stream","C_Users_adm1_Documents_Semester5_Transactional_Application_2_Final_Project_social_network_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this","resolve","rej","navigator","mediaDevices","getUserMedia","video","audio","catch","err","Error","getTracks","track","stop","MessengerSidePanel","componentDidMount","props","handleSearch","e","_this$props","users","filter","members","member","firstName","toLocaleLowerCase","includes","target","lastName","_this2","_this$props2","searchedRooms","usersList","map","lastMessage","sender","messageType","react_default","a","createElement","className","onClick","concat","activityStatus","profilePicture","alt","id","aria-hidden","htmlFor","placeholder","onChange","Component","connectedMessengerSidePanel","connect","state","chat","imageMaxSize","acceptedFileTypes","acceptedFileTypesArray","item","trim","MessengerInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","sendTypingStatus","socket","_this$props$chat","currentRoom","emit","userId","handleChange","_this$props2$chat","debouncedTyping","clearTimeout","timer","setState","setTimeout","addEmoji","emoji","native","handleSubmit","preventDefault","_this$props3","_this$props3$chat","receiver","uuid","toggleEmojiPicker","showPicker","handleFileSelect","event","_this$props4","_this$props4$chat","files","verifyFile","currentFile","myFileItemReader","FileReader","addEventListener","myResult","result","myFilename","myNewFile","fd","FormData","uniqueId","append","name","readAsDataURL","currentFileType","currentFileSize","size","alertActions","throttle","display","style","justifyItems","dist_es","onSelect","onSubmit","accept","multiple","connectedMessengerInput","CallingModal","handleOpen","mediaHandler","getPremissions","hasMedia","peer","Peer","initiator","trickle","on","userVideo","srcObject","play","signal","webRtc","stopRecoring","myVideo","handleClose","destroy","callingModal","Modal","open","trigger","Content","ref","Actions","Button","negative","connectedCallingModal","dayjs","extend","relativeTime","hashtag","linkify","mention","linkifyOptions","formatHref","href","attributes","url","ShowImage","_ref","show","MessengerMessages","_ref2","picture","backgroundColor","color","border","wordWrap","linkifyjs_react_default","options","Popup","content","createdAt","fromNow","borderRadius","objectFit","photo","MessengerContent","handleScrollToBottom","componentDidUpdate","scrollToBottom","animateScroll","containerId","duration","delay","fetchMessages","lastId","messagesContainer","React","createRef","current","scrollHeight","scrollTop","clientHeight","loadedMessages","Messages","initialMessagesFetchig","Dimmer","active","Loader","Label","basic","pointing","fluid","disabled","messageFetching","loading","isTyping","connectedMessengerContent","MessengerPage","document","title","connectedMessengerPage"],"mappings":"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","file":"static/js/15.9ab79f7f.chunk.js","sourcesContent":["export const chatService = {\r\n  getChatRooms,\r\n  getMessagesForRoom,\r\n  sendMessage,\r\n  sendImage,\r\n  readMessages,\r\n  call,\r\n  answer\r\n};\r\n\r\nfunction logout() {\r\n  // remove user from local storage to log user out\r\n  localStorage.removeItem(\"user\");\r\n}\r\n\r\nfunction getChatRooms() {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    }\r\n  };\r\n\r\n  return fetch(\"/api/chat/getChatRooms/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction readMessages(params) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({\r\n      ...params\r\n    })\r\n  };\r\n\r\n  return fetch(\"/api/chat/readMessages/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction getMessagesForRoom(room) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({\r\n      ...room\r\n    })\r\n  };\r\n\r\n  return fetch(\"/api/chat/getMessagesForRoom/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction sendMessage(params) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({\r\n      ...params\r\n    })\r\n  };\r\n\r\n  return fetch(\"/api/chat/sendMessage/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction sendImage(data) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: data\r\n  };\r\n\r\n  return fetch(\"/api/chat/sendImage/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction call(data) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({\r\n      ...data\r\n    })\r\n  };\r\n\r\n  return fetch(\"/api/chat/call/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction answer(data) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: JSON.parse(localStorage.getItem(\"user\")).token\r\n    },\r\n    body: JSON.stringify({\r\n      ...data\r\n    })\r\n  };\r\n\r\n  return fetch(\"/api/chat/answer/\", requestOptions)\r\n    .then(handleResponse)\r\n    .then(res => {\r\n      return res;\r\n    });\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then(text => {\r\n    const data = text && JSON.parse(text);\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        // auto logout if 401 response returned from api\r\n        logout();\r\n        window.location.reload(true);\r\n      }\r\n\r\n      const error = (data && data.message) || response.statusText;\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    return data;\r\n  });\r\n}\r\n","import { chatConstants } from \"../_constants/chatConstants\";\r\nimport { chatService } from \"../_services/chatService\";\r\n\r\nexport const chatActions = {\r\n  typing,\r\n  stoppedTyping,\r\n  changeRoom,\r\n  getChatRooms,\r\n  getMessagesForRoom,\r\n  sendMessage,\r\n  sendImage,\r\n  newMessage,\r\n  readMessages,\r\n  changeActivityStatus,\r\n  imageMessageRequest,\r\n  call,\r\n  answer,\r\n  endCall,\r\n  endAnsweringCall,\r\n  searchUsers\r\n};\r\n\r\nfunction typing(roomId) {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.TYPING, roomId });\r\n  };\r\n}\r\n\r\nfunction stoppedTyping(roomId) {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.STOPPED_TYPING, roomId });\r\n  };\r\n}\r\n\r\nfunction initiateMessageArray(roomId) {\r\n  return { type: chatConstants.INIT_MESSAGE_ARRAY, roomId };\r\n}\r\n\r\nfunction changeRoom(room) {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.CHANGE_ROOM, room });\r\n  };\r\n}\r\n\r\nfunction readMessages(params) {\r\n  const { messageIds, roomId } = params;\r\n  return dispatch => {\r\n    dispatch(read(messageIds, roomId));\r\n    chatService.readMessages(params).then(\r\n      () => {},\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function read(messageIds, roomId) {\r\n    return { type: chatConstants.READ_MESSAGES, messageIds, roomId };\r\n  }\r\n}\r\n\r\nfunction getChatRooms() {\r\n  return dispatch => {\r\n    dispatch(request());\r\n\r\n    chatService.getChatRooms().then(\r\n      response => {\r\n        dispatch(success(response.rooms));\r\n\r\n        response.rooms.forEach(room =>\r\n          dispatch(initiateMessageArray(room._id))\r\n        );\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function request() {\r\n    return { type: chatConstants.GET_ROOMS_REQUEST };\r\n  }\r\n  function success(rooms) {\r\n    return { type: chatConstants.GET_ROOMS_SUCCESS, rooms };\r\n  }\r\n}\r\n\r\nfunction changeActivityStatus(user) {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.CHANGE_ACTIVITY_STATUS, user });\r\n  };\r\n}\r\n\r\nfunction getMessagesForRoom(room) {\r\n  return dispatch => {\r\n    if (room.initialFetch) {\r\n      dispatch(initialRequest(room._id));\r\n    } else {\r\n      dispatch(request(room._id));\r\n    }\r\n    chatService.getMessagesForRoom(room).then(\r\n      response => {\r\n        dispatch(\r\n          success({ messages: response.messages.reverse(), roomId: room._id })\r\n        );\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function request(roomId) {\r\n    return { type: chatConstants.GET_MESSAGES_REQUEST, roomId };\r\n  }\r\n  function initialRequest(roomId) {\r\n    return { type: chatConstants.GET_MESSAGES_INITIAL_REQUEST, roomId };\r\n  }\r\n  function success(data) {\r\n    return { type: chatConstants.GET_MESSAGES_SUCCESS, data };\r\n  }\r\n}\r\n\r\nfunction sendMessage(message) {\r\n  return dispatch => {\r\n    dispatch(request({ ...message, sent: false }));\r\n\r\n    chatService.sendMessage(message).then(\r\n      response => {\r\n        dispatch(success(response.message));\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function request(message) {\r\n    return { type: chatConstants.SEND_MESSAGE_REQUEST, message };\r\n  }\r\n  function success(message) {\r\n    return { type: chatConstants.SEND_MESSAGE_SUCCESS, message };\r\n  }\r\n}\r\n\r\nfunction sendImage(data, message) {\r\n  return dispatch => {\r\n    dispatch(request({ ...message, sent: false }));\r\n\r\n    chatService.sendImage(data).then(\r\n      response => {\r\n        dispatch(success(response.message));\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n  function request(message) {\r\n    return { type: chatConstants.SEND_MESSAGE_REQUEST, message };\r\n  }\r\n  function success(message) {\r\n    return { type: chatConstants.SEND_MESSAGE_SUCCESS, message };\r\n  }\r\n}\r\n\r\nfunction newMessage(message) {\r\n  return dispatch => {\r\n    dispatch(success(message));\r\n    dispatch({ type: chatConstants.INC_MESSAGE_COUNT });\r\n  };\r\n  function success(message) {\r\n    return { type: chatConstants.NEW_MESSAGE, message };\r\n  }\r\n}\r\n\r\nfunction imageMessageRequest(message) {\r\n  return dispatch => {\r\n    dispatch(success(message));\r\n  };\r\n  function success(message) {\r\n    return { type: chatConstants.NEW_IMAGE_MESSAGE_REQUEST, message };\r\n  }\r\n}\r\n\r\nfunction call(data) {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.OPEN_CALLING_MODAL });\r\n\r\n    chatService.call(data).then(\r\n      () => {},\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nfunction answer(data) {\r\n  return dispatch => {\r\n    chatService.answer(data).then(\r\n      () => {},\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nfunction endCall() {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.CLOSE_CALLING_MODAL });\r\n  };\r\n}\r\n\r\nfunction endAnsweringCall() {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.CLOSE_ANSWERING_MODAL });\r\n  };\r\n}\r\n\r\nfunction searchUsers(rooms) {\r\n  return dispatch => {\r\n    dispatch({ type: chatConstants.SEARCH_USERS, rooms });\r\n  };\r\n}\r\n","// A few JavaScript Functions for Images and Files\r\n// Author: Justin Mitchel\r\n// Source: https://kirr.co/ndywes\r\n\r\n// Convert a Base64-encoded string to a File object\r\nexport function base64StringtoFile(base64String, filename) {\r\n  var arr = base64String.split(\",\"),\r\n    mime = arr[0].match(/:(.*?);/)[1],\r\n    bstr = atob(arr[1]),\r\n    n = bstr.length,\r\n    u8arr = new Uint8Array(n);\r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  return new File([u8arr], filename, { type: mime });\r\n}\r\n\r\n// Download a Base64-encoded file\r\n\r\nexport function downloadBase64File(base64Data, filename) {\r\n  var element = document.createElement(\"a\");\r\n  element.setAttribute(\"href\", base64Data);\r\n  element.setAttribute(\"download\", filename);\r\n  element.style.display = \"none\";\r\n  document.body.appendChild(element);\r\n  element.click();\r\n  document.body.removeChild(element);\r\n}\r\n\r\n// Extract an Base64 Image's File Extension\r\nexport function extractImageFileExtensionFromBase64(base64Data) {\r\n  return base64Data.substring(\r\n    \"data:image/\".length,\r\n    base64Data.indexOf(\";base64\")\r\n  );\r\n}\r\n\r\n// Base64 Image to Canvas with a Crop\r\nexport function image64toCanvasRef(canvasRef, image64, pixelCrop) {\r\n  const canvas = canvasRef; // document.createElement('canvas');\r\n  canvas.width = pixelCrop.width;\r\n  canvas.height = pixelCrop.height;\r\n  const ctx = canvas.getContext(\"2d\");\r\n  const image = new Image();\r\n  image.src = image64;\r\n  image.onload = function() {\r\n    ctx.drawImage(\r\n      image,\r\n      pixelCrop.x,\r\n      pixelCrop.y,\r\n      pixelCrop.width,\r\n      pixelCrop.height,\r\n      0,\r\n      0,\r\n      pixelCrop.width,\r\n      pixelCrop.height\r\n    );\r\n  };\r\n}\r\n","export class MediaHandler {\r\n  constructor() {\r\n    this.stream = null;\r\n  }\r\n  getPremissions() {\r\n    return new Promise((resolve, rej) => {\r\n      navigator.mediaDevices\r\n        .getUserMedia({ video: true, audio: true })\r\n        .then(stream => {\r\n          this.stream = stream;\r\n          resolve(stream);\r\n        })\r\n        .catch(err => {\r\n          throw new Error(\"Unable to fetch stream \" + err);\r\n        });\r\n    });\r\n  }\r\n  stopRecoring() {\r\n    this.stream.getTracks().forEach(function(track) {\r\n      track.stop();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { chatActions } from \"../actions/chatActions\";\r\n\r\nclass MessengerSidePanel extends Component {\r\n  componentDidMount = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(chatActions.getChatRooms());\r\n  };\r\n\r\n  changeRoom = room => {\r\n    const { dispatch } = this.props;\r\n    dispatch(chatActions.changeRoom(room));\r\n  };\r\n  //room.members.filter(member => member._id !== user.data._id);\r\n  handleSearch = e => {\r\n    const {\r\n      dispatch,\r\n      rooms,\r\n      user: { data }\r\n    } = this.props;\r\n    const users = rooms.filter(room => {\r\n      const user = room.members.filter(member => member._id !== data._id);\r\n      if (\r\n        user[0].firstName\r\n          .toLocaleLowerCase()\r\n          .includes(e.target.value.toLocaleLowerCase()) ||\r\n        user[0].lastName\r\n          .toLocaleLowerCase()\r\n          .includes(e.target.value.toLocaleLowerCase())\r\n      ) {\r\n        return room;\r\n      }\r\n      return null;\r\n    });\r\n    dispatch(chatActions.searchUsers(users));\r\n  };\r\n\r\n  render() {\r\n    const { user, rooms, searchedRooms, roomId } = this.props;\r\n    let renderRooms = searchedRooms ? searchedRooms : rooms;\r\n    const usersList = renderRooms.map(room => {\r\n      const member = room.members.filter(\r\n        member => member._id !== user.data._id\r\n      );\r\n      let message = \"...\";\r\n      if (room.lastMessage[0] && room.lastMessage[0].sender === user.data._id) {\r\n        if (room.lastMessage[0].messageType === \"text\") {\r\n          message = \"You: \" + room.lastMessage[0].text;\r\n        } else {\r\n          message = \"You sent image \";\r\n        }\r\n      } else if (room.lastMessage[0]) {\r\n        if (room.lastMessage[0].messageType === \"text\") {\r\n          message = room.lastMessage[0].text;\r\n        } else {\r\n          message = \"Image \";\r\n        }\r\n      }\r\n      return (\r\n        <li\r\n          className={room._id === roomId ? \"contact active\" : \"contact\"}\r\n          key={room._id}\r\n          onClick={() => this.changeRoom({ ...room, user: { ...member[0] } })}\r\n        >\r\n          <div className=\"wrap\">\r\n            <span\r\n              className={`contact-status ${member[0].activityStatus}`}\r\n            ></span>\r\n            <img\r\n              src={`/images/profile-picture/100x100/${member[0].profilePicture}`}\r\n              alt=\"\"\r\n            />\r\n            <div className=\"meta\">\r\n              <p className=\"name\">\r\n                {member[0].firstName + \" \" + member[0].lastName}\r\n              </p>\r\n              <p className=\"preview\">{message}</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div id=\"sidepanel\">\r\n        <div id=\"profile\">\r\n          <div className=\"wrap\">\r\n            <img\r\n              id=\"profile-img\"\r\n              src={`/images/profile-picture/100x100/${user.data.profilePicture}`}\r\n              className=\"online\"\r\n              alt=\"\"\r\n            />\r\n            <p>{user.data.firstName + \" \" + user.data.lastName}</p>\r\n            <i\r\n              className=\"fa fa-chevron-down expand-button\"\r\n              aria-hidden=\"true\"\r\n            ></i>\r\n            <div id=\"status-options\">\r\n              <ul>\r\n                <li id=\"status-online\" className=\"active\">\r\n                  <span className=\"status-circle\"></span>\r\n                  <p>Online</p>\r\n                </li>\r\n                <li id=\"status-offline\">\r\n                  <span className=\"status-circle\"></span>\r\n                  <p>Offline</p>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"search\">\r\n          <label htmlFor=\"\">\r\n            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search contacts...\"\r\n            onChange={this.handleSearch}\r\n          />\r\n        </div>\r\n        <div id=\"contacts\">\r\n          <ul>{usersList.length ? usersList : \"No users\"}</ul>\r\n        </div>\r\n        <div id=\"bottom-bar\">\r\n          <button id=\"addcontact\">\r\n            <i className=\"fa fa-user-plus fa-fw\" aria-hidden=\"true\"></i>\r\n            <span>Add contact</span>\r\n          </button>\r\n          <button id=\"settings\">\r\n            <i className=\"fa fa-cog fa-fw\" aria-hidden=\"true\"></i>\r\n            <span>Settings</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user,\r\n  rooms: state.chat.rooms,\r\n  searchedRooms: state.chat.searchedRooms,\r\n  roomId: state.chat.roomId\r\n});\r\n\r\nconst connectedMessengerSidePanel = connect(mapStateToProps)(\r\n  MessengerSidePanel\r\n);\r\nexport { connectedMessengerSidePanel as MessengerSidePanel };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { chatActions } from \"../actions/chatActions\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport uuid from \"uuid/v4\";\r\nimport { throttle } from \"throttle-debounce\";\r\nimport { alertActions } from \"../actions/alertActions\";\r\nimport {\r\n  extractImageFileExtensionFromBase64,\r\n  base64StringtoFile\r\n} from \"../reusable/ReusableUtils\";\r\n\r\nconst imageMaxSize = 10485760; // bytes 10MB\r\nconst acceptedFileTypes =\r\n  \"image/x-png, image/png, image/jpg, image/jpeg, image/gif\";\r\nconst acceptedFileTypesArray = acceptedFileTypes.split(\",\").map(item => {\r\n  return item.trim();\r\n});\r\n\r\nclass MessengerInput extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: \"\",\r\n      showPicker: false\r\n    };\r\n\r\n    this.debouncedTyping = throttle(3000, this.sendTypingStatus);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timer = null;\r\n  }\r\n\r\n  sendTypingStatus = () => {\r\n    const {\r\n      socket,\r\n      chat: { roomId, currentRoom }\r\n    } = this.props;\r\n    socket.emit(\"typing\", { roomId, userId: currentRoom.user._id });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const {\r\n      socket,\r\n      chat: { roomId, currentRoom }\r\n    } = this.props;\r\n    this.debouncedTyping();\r\n    clearTimeout(this.timer);\r\n\r\n    this.setState({ value: e.target.value });\r\n    this.timer = setTimeout(() => {\r\n      socket.emit(\"stoppedTyping\", { roomId, userId: currentRoom.user._id });\r\n    }, 3000);\r\n  };\r\n\r\n  addEmoji = e => {\r\n    let emoji = e.native;\r\n    this.setState({\r\n      value: this.state.value + emoji\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      dispatch,\r\n      chat: { roomId, currentRoom },\r\n      userId\r\n    } = this.props;\r\n    const { value } = this.state;\r\n    if (value !== \"\") {\r\n      dispatch(\r\n        chatActions.sendMessage({\r\n          receiver: currentRoom.user,\r\n          value,\r\n          roomId,\r\n          sender: userId,\r\n          uuid: uuid()\r\n        })\r\n      );\r\n    }\r\n\r\n    this.setState({ value: \"\" });\r\n  };\r\n\r\n  toggleEmojiPicker = () => {\r\n    this.setState({ showPicker: !this.state.showPicker });\r\n  };\r\n\r\n  handleFileSelect = event => {\r\n    const {\r\n      dispatch,\r\n      chat: { roomId, currentRoom },\r\n      userId\r\n    } = this.props;\r\n    const files = event.target.files;\r\n    if (files && files.length > 0) {\r\n      const isVerified = this.verifyFile(files);\r\n      if (isVerified) {\r\n        // imageBase64Data\r\n        const currentFile = files[0];\r\n        const myFileItemReader = new FileReader();\r\n        myFileItemReader.addEventListener(\r\n          \"load\",\r\n          () => {\r\n            // console.log(myFileItemReader.result)\r\n            const myResult = myFileItemReader.result;\r\n            const imgSrcExt = extractImageFileExtensionFromBase64(myResult);\r\n            const myFilename = \"image.\" + imgSrcExt;\r\n            const myNewFile = base64StringtoFile(myResult, myFilename);\r\n            const fd = new FormData();\r\n            const uniqueId = uuid();\r\n            fd.append(\"receiver\", JSON.stringify(currentRoom.user));\r\n            fd.append(\"roomId\", roomId);\r\n            fd.append(\"uuid\", uniqueId);\r\n            fd.append(\"photo\", myNewFile, myNewFile.name);\r\n\r\n            dispatch(\r\n              chatActions.sendImage(fd, {\r\n                receiver: currentRoom.user,\r\n                value: \"Image\",\r\n                sender: userId,\r\n                roomId,\r\n                uuid: uniqueId\r\n              })\r\n            );\r\n          },\r\n          false\r\n        );\r\n\r\n        myFileItemReader.readAsDataURL(currentFile);\r\n      }\r\n    }\r\n  };\r\n\r\n  verifyFile = files => {\r\n    if (files && files.length > 0) {\r\n      const currentFile = files[0];\r\n      const currentFileType = currentFile.type;\r\n      const currentFileSize = currentFile.size;\r\n      const { dispatch } = this.props;\r\n\r\n      if (!acceptedFileTypesArray.includes(currentFileType)) {\r\n        dispatch(\r\n          alertActions.error(\r\n            \"This file is not allowed. Only images are allowed.\"\r\n          )\r\n        );\r\n\r\n        return false;\r\n      }\r\n\r\n      if (currentFileSize > imageMaxSize) {\r\n        dispatch(\r\n          alertActions.error(\r\n            \"This file is not allowed. \" +\r\n              currentFileSize +\r\n              \" bytes is too large\"\r\n          )\r\n        );\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    const display = this.state.showPicker ? \"grid\" : \"none\";\r\n    return (\r\n      <div className=\"message-input\">\r\n        <div\r\n          style={{\r\n            display,\r\n            justifyItems: \"end\"\r\n          }}\r\n        >\r\n          <Picker native={true} onSelect={this.addEmoji} />\r\n        </div>\r\n        <div className=\"wrap\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input\r\n              onChange={this.handleChange}\r\n              value={value}\r\n              type=\"text\"\r\n              placeholder=\"Write your message...\"\r\n            />\r\n          </form>\r\n          <label>\r\n            <input\r\n              type=\"file\"\r\n              accept={acceptedFileTypes}\r\n              multiple={false}\r\n              onChange={this.handleFileSelect}\r\n            />\r\n            <i className=\"fa fa-paperclip\" aria-hidden=\"true\"></i>\r\n          </label>\r\n\r\n          <button onClick={this.toggleEmojiPicker}>\r\n            <i className=\"fa fa-smile-o\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  chat: state.chat,\r\n  socket: state.socket.socket,\r\n  userId: state.user.data._id\r\n});\r\n\r\nconst connectedMessengerInput = connect(mapStateToProps)(MessengerInput);\r\nexport { connectedMessengerInput as MessengerInput };\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { chatActions } from \"../actions/chatActions\";\r\nimport { Button, Modal } from \"semantic-ui-react\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { MediaHandler } from \"../_helpers/MediaHandler\";\r\nimport Peer from \"simple-peer\";\r\n\r\nclass CallingModal extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      hasMedia: false\r\n    };\r\n\r\n    this.stream = null;\r\n    this.mediaHandler = new MediaHandler();\r\n  }\r\n\r\n  handleOpen = () => {\r\n    const { dispatch, currentRoom, roomId, socket } = this.props;\r\n    this.mediaHandler\r\n      .getPremissions()\r\n      .then(stream => {\r\n        this.setState({ hasMedia: true });\r\n        this.stream = stream;\r\n\r\n        this.peer = new Peer({\r\n          initiator: true,\r\n          stream: stream,\r\n          trickle: false\r\n        });\r\n\r\n        this.peer.on(\"error\", err => {\r\n          console.log(err);\r\n        });\r\n\r\n        this.peer.on(\"stream\", stream => {\r\n          this.userVideo.srcObject = stream;\r\n          this.userVideo.play();\r\n        });\r\n\r\n        socket.on(\"newAnswer\", data => {\r\n          this.peer.signal(data.webRtc);\r\n        });\r\n\r\n        this.peer.on(\"signal\", webRtc => {\r\n          dispatch(chatActions.call({ currentRoom, roomId, webRtc }));\r\n        });\r\n\r\n        this.peer.on(\"close\", () => {\r\n          this.mediaHandler.stopRecoring();\r\n          dispatch(chatActions.endCall());\r\n          this.setState({ hasMedia: false });\r\n        });\r\n\r\n        this.myVideo.srcObject = stream;\r\n        this.myVideo.play();\r\n      })\r\n      .catch(e => console.log(e));\r\n  };\r\n\r\n  handleClose = () => {\r\n    const { dispatch } = this.props;\r\n\r\n    this.peer.destroy();\r\n\r\n    this.mediaHandler.stopRecoring();\r\n    dispatch(chatActions.endCall());\r\n    this.setState({ hasMedia: false });\r\n  };\r\n\r\n  render() {\r\n    const { callingModal } = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        open={callingModal}\r\n        trigger={\r\n          <i\r\n            onClick={this.handleOpen}\r\n            className=\"fa fa-video-camera\"\r\n            aria-hidden=\"true\"\r\n          ></i>\r\n        }\r\n      >\r\n        <Modal.Content>\r\n          <video\r\n            style={{\r\n              width: 300,\r\n              height: \"auto\"\r\n            }}\r\n            ref={ref => {\r\n              this.myVideo = ref;\r\n            }}\r\n          ></video>\r\n          <video\r\n            style={{\r\n              width: 300,\r\n              height: \"auto\"\r\n            }}\r\n            ref={ref => {\r\n              this.userVideo = ref;\r\n            }}\r\n          ></video>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={this.handleClose}>\r\n            End call\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userId: state.user.data._id,\r\n  profilePicture: state.user.data.profilePicture,\r\n  callingModal: state.chat.callingModal,\r\n  socket: state.socket.socket,\r\n  currentRoom: state.chat.currentRoom,\r\n  roomId: state.chat.roomId\r\n});\r\n\r\nconst connectedCallingModal = connect(mapStateToProps)(CallingModal);\r\nexport { connectedCallingModal as CallingModal };\r\n","import React from \"react\";\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport Linkify from \"linkifyjs/react\";\r\nimport * as linkify from \"linkifyjs\";\r\nimport hashtag from \"linkifyjs/plugins/hashtag\";\r\nimport mention from \"linkifyjs/plugins/mention\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\ndayjs.extend(relativeTime);\r\n\r\nhashtag(linkify);\r\nmention(linkify);\r\n\r\nconst linkifyOptions = {\r\n  formatHref: function (href, type) {\r\n    if (type === \"hashtag\") {\r\n      href = \"/hashtags/\" + href.substring(1);\r\n    }\r\n    if (type === \"mention\") {\r\n      href = \"/\" + href.substring(1);\r\n    }\r\n    return href;\r\n  },\r\n  attributes: {\r\n    target: {\r\n      url: \"_blank\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction ShowImage({ show, image }) {\r\n  return show ? (\r\n    <img src={`/images/profile-picture/100x100/${image}`} alt=\"\" />\r\n  ) : (\r\n    <div></div>\r\n  );\r\n}\r\n\r\nconst MessengerMessages = ({\r\n  message,\r\n  userId,\r\n  profilePicture,\r\n  currentRoom,\r\n}) => {\r\n  if (message.sender === userId) {\r\n    if (message.sent === false) {\r\n      return (\r\n        <li className=\"replies\" key={message.uuid}>\r\n          <ShowImage image={profilePicture} show={message.picture}></ShowImage>\r\n          <p\r\n            style={{\r\n              backgroundColor: \"#f5f5f5\",\r\n              color: \"black\",\r\n              border: \"1px solid grey\",\r\n              wordWrap: \"break-word\",\r\n            }}\r\n          >\r\n            <Linkify options={linkifyOptions}>{message.value}</Linkify>\r\n          </p>\r\n        </li>\r\n      );\r\n    }\r\n    if (message.messageType === \"text\") {\r\n      return (\r\n        <li className=\"replies\">\r\n          <ShowImage image={profilePicture} show={message.picture}></ShowImage>\r\n          <Popup\r\n            content={\r\n              dayjs(message.createdAt).fromNow() + \", seen:\" + message.read\r\n            }\r\n            trigger={\r\n              <p>\r\n                <Linkify options={linkifyOptions}>{message.text}</Linkify>\r\n              </p>\r\n            }\r\n          />\r\n        </li>\r\n      );\r\n    } else {\r\n      return (\r\n        <li className=\"replies\">\r\n          <ShowImage image={profilePicture} show={message.picture}></ShowImage>\r\n          <Popup\r\n            content={\r\n              dayjs(message.createdAt).fromNow() + \", seen:\" + message.read\r\n            }\r\n            trigger={\r\n              <img\r\n                style={{\r\n                  borderRadius: \"3%\",\r\n                  objectFit: \"cover\",\r\n                  width: \"40%\",\r\n                  height: \"20%\",\r\n                }}\r\n                src={`/images/chat-images/${message.photo}`}\r\n                alt=\"\"\r\n              />\r\n            }\r\n          />\r\n        </li>\r\n      );\r\n    }\r\n  } else {\r\n    if (message.sent === false) {\r\n      return (\r\n        <li className=\"sent\" key={message.uuid}>\r\n          <ShowImage\r\n            image={currentRoom.user.profilePicture}\r\n            show={message.picture}\r\n          ></ShowImage>\r\n          <p\r\n            style={{\r\n              backgroundColor: \"#f5f5f5\",\r\n              color: \"black\",\r\n              border: \"1px solid grey\",\r\n              wordWrap: \"break-word\",\r\n            }}\r\n          >\r\n            <Linkify options={linkifyOptions}>{message.value}</Linkify>\r\n          </p>\r\n        </li>\r\n      );\r\n    }\r\n    if (message.messageType === \"text\") {\r\n      return (\r\n        <li className=\"sent\">\r\n          <ShowImage\r\n            image={currentRoom.user.profilePicture}\r\n            show={message.picture}\r\n          ></ShowImage>\r\n\r\n          <Popup\r\n            content={\r\n              dayjs(message.createdAt).fromNow() + \", seen:\" + message.read\r\n            }\r\n            trigger={\r\n              <p>\r\n                {\" \"}\r\n                <Linkify options={linkifyOptions}>{message.text}</Linkify>\r\n              </p>\r\n            }\r\n          />\r\n        </li>\r\n      );\r\n    } else {\r\n      return (\r\n        <li className=\"sent\">\r\n          <ShowImage\r\n            image={currentRoom.user.profilePicture}\r\n            show={message.picture}\r\n          ></ShowImage>\r\n          <Popup\r\n            content={\r\n              dayjs(message.createdAt).fromNow() + \", seen:\" + message.read\r\n            }\r\n            trigger={\r\n              <img\r\n                style={{\r\n                  borderRadius: \"3%\",\r\n                  objectFit: \"cover\",\r\n                  width: \"40%\",\r\n                  height: \"20%\",\r\n                }}\r\n                src={`/images/chat-images/${message.photo}`}\r\n                alt=\"\"\r\n              />\r\n            }\r\n          />\r\n        </li>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default MessengerMessages;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { chatActions } from \"../actions/chatActions\";\r\nimport { MessengerInput } from \"./MessengerInput\";\r\nimport { Dimmer, Loader, Button, Popup, Label } from \"semantic-ui-react\";\r\nimport { CallingModal } from \"./CallingModal\";\r\nimport { animateScroll } from \"react-scroll\";\r\nimport MessengerMessages from \"./Messages\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\n\r\nclass MessengerContent extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.messagesContainer = React.createRef();\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const { dispatch, currentRoom, roomId, userId, content } = this.props;\r\n\r\n    if (!content.messages.length) {\r\n      dispatch(\r\n        chatActions.getMessagesForRoom({ ...currentRoom, initialFetch: true })\r\n      );\r\n    } else {\r\n      const messageIds = content.messages\r\n        .filter(message => message.receiver === userId && !message.read)\r\n        .map(message => message._id);\r\n      if (messageIds.length) {\r\n        dispatch(chatActions.readMessages({ messageIds, roomId }));\r\n      }\r\n    }\r\n\r\n    this.handleScrollToBottom();\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    const { dispatch, roomId, content, userId } = this.props;\r\n    const messageIds = content.messages\r\n      .filter(message => message.receiver === userId && !message.read)\r\n      .map(message => message._id);\r\n    if (messageIds.length) {\r\n      dispatch(chatActions.readMessages({ messageIds, roomId }));\r\n    }\r\n    this.scrollToBottom();\r\n  };\r\n\r\n  scrollToBottom() {\r\n    //console.log(this.messagesContainer.current.scrollHeight);\r\n\r\n    if (\r\n      this.messagesContainer.current.scrollHeight -\r\n        this.messagesContainer.current.scrollTop -\r\n        this.messagesContainer.current.clientHeight <\r\n      350\r\n    ) {\r\n      animateScroll.scrollToBottom({\r\n        containerId: \"ContainerElementID\",\r\n        duration: 200,\r\n        delay: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  handleScrollToBottom = () => {\r\n    animateScroll.scrollToBottom({\r\n      containerId: \"ContainerElementID\",\r\n      duration: 500,\r\n      delay: 0\r\n    });\r\n  };\r\n\r\n  fetchMessages = () => {\r\n    const { dispatch, currentRoom, content } = this.props;\r\n    const lastId = content.messages[0]._id;\r\n    dispatch(\r\n      chatActions.getMessagesForRoom({\r\n        ...currentRoom,\r\n        lastId,\r\n        initialFetch: false\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { currentRoom, content, userId, profilePicture } = this.props;\r\n\r\n    const loadedMessages = currentRoom.messages - content.messages.length;\r\n    const messages = content.messages.map(message => (\r\n      <MessengerMessages\r\n        key={message._id || message.uuid}\r\n        currentRoom={currentRoom}\r\n        message={message}\r\n        userId={userId}\r\n        profilePicture={profilePicture}\r\n      ></MessengerMessages>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        {content.initialMessagesFetchig ? (\r\n          <Dimmer active>\r\n            <Loader />\r\n          </Dimmer>\r\n        ) : null}\r\n        <div className=\"contact-profile\">\r\n          <img\r\n            src={`/images/profile-picture/100x100/${currentRoom.user.profilePicture}`}\r\n            alt=\"\"\r\n          />\r\n          <p>{currentRoom.user.firstName + \" \" + currentRoom.user.lastName}</p>\r\n          <div className=\"social-media\">\r\n            <Popup\r\n              content=\"Scroll to bottom.\"\r\n              trigger={\r\n                <i\r\n                  onClick={this.handleScrollToBottom}\r\n                  className=\"fa fa-arrow-down\"\r\n                  aria-hidden=\"true\"\r\n                ></i>\r\n              }\r\n            />\r\n\r\n            <CallingModal></CallingModal>\r\n            <Label basic color=\"red\" pointing=\"left\">\r\n              This isn't working.\r\n            </Label>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"messages\"\r\n          id=\"ContainerElementID\"\r\n          ref={this.messagesContainer}\r\n        >\r\n          {loadedMessages ? (\r\n            <Button\r\n              fluid\r\n              disabled={content.messageFetching}\r\n              loading={content.messageFetching}\r\n              onClick={this.fetchMessages}\r\n            >\r\n              Load {currentRoom.messages - content.messages.length} more\r\n            </Button>\r\n          ) : null}\r\n\r\n          <ul>\r\n            {messages}\r\n            {content.isTyping ? (\r\n              <li className=\"sent\" key={currentRoom.user._id}>\r\n                <img\r\n                  src={`/images/profile-picture/100x100/${currentRoom.user.profilePicture}`}\r\n                  alt=\"\"\r\n                />\r\n                <p>typing...</p>\r\n              </li>\r\n            ) : null}\r\n          </ul>\r\n        </div>\r\n        <MessengerInput></MessengerInput>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userId: state.user.data._id,\r\n  profilePicture: state.user.data.profilePicture,\r\n  callingModal: state.chat.callingModal,\r\n  socket: state.socket.socket,\r\n  currentRoom: state.chat.currentRoom,\r\n  roomId: state.chat.roomId\r\n});\r\n\r\nconst connectedMessengerContent = connect(mapStateToProps)(MessengerContent);\r\nexport { connectedMessengerContent as MessengerContent };\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MessengerSidePanel } from \"./MessengerSidePanel\";\r\nimport { MessengerContent } from \"./MessengerContent\";\r\n\r\nclass MessengerPage extends Component {\r\n  componentDidMount = () => {\r\n    document.title = \"Messages | social-network\";\r\n  };\r\n\r\n  render() {\r\n    const { chat, roomId } = this.props;\r\n    return (\r\n      <div id=\"frame\">\r\n        <MessengerSidePanel></MessengerSidePanel>\r\n        {chat.currentRoom ? (\r\n          <MessengerContent\r\n            content={chat[roomId]}\r\n            key={roomId}\r\n          ></MessengerContent>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  roomId: state.chat.roomId,\r\n  chat: state.chat\r\n});\r\n\r\nconst connectedMessengerPage = connect(mapStateToProps)(MessengerPage);\r\nexport { connectedMessengerPage as default };\r\n"],"sourceRoot":""}